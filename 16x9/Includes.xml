<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation  -->
<includes>
	<include file="Defaults.xml"/>
	<!-- Views -->
	<include file="View_50_List.xml"/>
	<include file="View_500_Thumbnails.xml"/>
	<include file="Includes_Furniture.xml"/>
	<include file="Includes_Home.xml"/>
	<include file="Includes_GlobalSearch.xml"/>
	<include file="Includes_NextAired.xml"/>
	<include file="Includes_Labels.xml"/>
	<include file="Includes_Images.xml"/>
	<include file="Includes_Animations.xml"/>
	<include file="Includes_Defs.xml"/>
	<include file="Includes_PVR.xml"/>
	<include file="Includes_OSD.xml"/>
	<!-- Skin Shortcuts -->
	<include file="script-skinshortcuts-includes.xml"/>
	<include name="CerberosSmoke">
		<control type="multiimage">
			<include>Dimensions_Fullscreen</include>
			<imagepath>special://skin/extras/cerberus</imagepath>
		</control>
	</include>
	<include name="ButtonControlWidget">
		<!--left-->
		<control type="group">
			<top>550</top>
			<left>-19</left>
			<visible>ControlGroup(9000).HasFocus | ControlGroup(9010).HasFocus</visible>
			<animation condition="!Control.HasFocus(8) + !Control.HasFocus(1)" effect="slide" end="-58" start="0,0" time="200">Conditional</animation>
			<animation condition="ControlGroup(9010).HasFocus()" effect="slide" end="193,221" start="0,0" time="0">Conditional</animation>
			<animation condition="[ControlGroup(9000).HasFocus() + StringCompare(Container(9000).NumItems,6)] | [ControlGroup(9010).HasFocus() + StringCompare(Container(9010).NumItems,6)]" effect="slide" end="-117" start="0,0" time="0">Conditional</animation>
			<animation condition="[ControlGroup(9000).HasFocus() + StringCompare(Container(9000).NumItems,5)] | [ControlGroup(9010).HasFocus() + StringCompare(Container(9010).NumItems,5)]" effect="slide" end="-234" start="0,0" time="0">Conditional</animation>
			<animation condition="[ControlGroup(9000).HasFocus() + StringCompare(Container(9000).NumItems,4)] | [ControlGroup(9010).HasFocus() + StringCompare(Container(9010).NumItems,4)]" effect="slide" end="-351" start="0,0" time="0">Conditional</animation>
			<animation condition="[ControlGroup(9000).HasFocus() + StringCompare(Container(9000).NumItems,3)] | [ControlGroup(9010).HasFocus() + StringCompare(Container(9010).NumItems,3)]" effect="slide" end="-468" start="0,0" time="0">Conditional</animation>
			<control type="group">
				<visible>Control.HasFocus(8) | Control.HasFocus(1)</visible>
				<left>1262</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[SelectionColourHighlight]</textcolor>
					<font>symbolbackbig</font>
					<label></label>
				</control>
				<control type="label">
					<top>2</top>
					<left>8</left>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
			<!--up-->
			<control type="group">
				<left>1316</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[SelectionColourHighlight]</textcolor>
					<font>symbolbackbig</font>
					<label></label>
				</control>
				<control type="label">
					<visible>ControlGroup(9000).HasFocus() + !Control.HasFocus(19)</visible>
					<top>8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
				<control type="label">
					<visible>ControlGroup(9010).HasFocus() + !Control.HasFocus(19)</visible>
					<top>8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
			<!--up-->
			<control type="group">
				<left>1316</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<visible>ControlGroup(9000).HasFocus() + Control.HasFocus(19)</visible>
					<top>8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
				<control type="label">
					<visible>ControlGroup(9010).HasFocus() + Control.HasFocus(19)</visible>
					<top>8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
			<!--down-->
			<control type="group">
				<left>1370</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[SelectionColourHighlight]</textcolor>
					<font>symbolbackbig</font>
					<label></label>
				</control>
				<control type="label">
					<visible>ControlGroup(9000).HasFocus()</visible>
					<top>-8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
				<control type="label">
					<visible>ControlGroup(9010).HasFocus()</visible>
					<top>-8</top>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
			<!--right-->
			<control type="group">
				<visible>Control.HasFocus(19)</visible>
				<left>1424</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[SelectionColourHighlight]</textcolor>
					<font>symbolbackbig</font>
					<label></label>
				</control>
				<control type="label">
					<top>2</top>
					<left>-8</left>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
			<!--right-->
			<control type="group">
				<visible>Control.HasFocus(10) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
				<left>1424</left>
				<width>116</width>
				<height>116</height>
				<control type="label">
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[SelectionColourHighlight]</textcolor>
					<font>symbolbackbig</font>
					<label></label>
				</control>
				<control type="label">
					<top>2</top>
					<left>-8</left>
					<aligny>center</aligny>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<font>symbol</font>
					<label></label>
				</control>
			</control>
		</control>
	</include>
	<include name="HiddenButton">
		<posx>-20</posx>
		<posy>-20</posy>
		<width>1</width>
		<height>1</height>
		<label>-</label>
		<texturenofocus>-</texturenofocus>
		<texturefocus>-</texturefocus>
	</include>
	<include name="Dimensions_Fullscreen">
		<posx>0</posx>
		<posy>0</posy>
		<width>1920</width>
		<height>1080</height>
	</include>
	<include name="Dimensions_FullscreenMinusTop">
		<top>130</top>
		<bottom>0</bottom>
		<width>1920</width>
	</include>
	<include name="WindowID">
		<width>780</width>
		<height>21</height>
		<textcolor>Blue</textcolor>
		<shadowcolor>$VAR[ColourFlags]</shadowcolor>
		<align>left</align>
	</include>
	<include name="DialogID">
		<width>780</width>
		<height>21</height>
		<textcolor>Green</textcolor>
		<shadowcolor>$VAR[ColourFlags]</shadowcolor>
		<align>left</align>
	</include>
	<include name="PathID">
		<posx>15r</posx>
		<posy>15</posy>
		<width>780</width>
		<height>21</height>
		<textcolor>Blue</textcolor>
		<shadowcolor>$VAR[ColourFlags]</shadowcolor>
		<align>right</align>
	</include>
	<include name="ControlID">
		<posx>15r</posx>
		<posy>48</posy>
		<width>780</width>
		<height>21</height>
		<textcolor>Red</textcolor>
		<shadowcolor>$VAR[ColourFlags]</shadowcolor>
		<align>right</align>
	</include>
	<include name="GlobalOverlay">
		<control type="image">
			<include>Animation.FadeIn</include>
			<include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation.FadeOut</include>
			<include>Dimensions_Fullscreen</include>
			<texture>common/screen-overlay-shard.png</texture>
			<animation type="Conditional" condition="true" reversible="false">
				<!-- Broken Fade -->
				<effect type="fade" start="33" end="33" time="0"/>
			</animation>
		</control>
	</include>
	<variable name="GlobalFanart">
		<value condition="!IsEmpty(Window(home).Property(ExtendedInfo_fanart)) + Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)">$INFO[Window(home).Property(ExtendedInfo_fanart)]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Container(450).ListItem(2).Icon)">$INFO[Container(450).ListItem(2).Icon]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + IsEmpty(Container(450).ListItem(2).Icon)">special://skin/extras/backgrounds/Avatar.jpg</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + Control.HasFocus(500) + !IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + Control.HasFocus(500) + !IsEmpty(Container(500).ListItem.Art(fanart))">$INFO[Container(500).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(3016)">$INFO[Container(3016).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(3017)">$INFO[Container(3017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(3012)">$INFO[Container(3012).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(4016)">$INFO[Container(4016).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(4017)">$INFO[Container(4017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(4012)">$INFO[Container(4012).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home)  + Control.HasFocus(5016)">$INFO[Container(5016).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home)  + Control.HasFocus(5017)">$INFO[Container(5017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home)  + Control.HasFocus(5012)">$INFO[Container(5012).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(6016)">$INFO[Container(6016).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(6017)">$INFO[Container(6017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(6012)">$INFO[Container(6012).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(9017)">$INFO[Container(9017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(10017)">$INFO[Container(10017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(14017)">$INFO[Container(14017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + Control.HasFocus(15017)">$INFO[Container(15017).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		<value condition="Window.IsVisible(home) + StringCompare(Container(300).ListItem.Property(defaultID),Weather)">$VAR[WeatherFanart]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[DefWeatherFanart]</value>
		<value condition="Window.IsVisible(home) + IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<value condition="Window.IsVisible(home) + System.IdleTime(10) + Skin.HasSetting(home.fade)">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<value condition="Window.IsActive(script-globalsearch-infodialog.xml) | Window.IsActive(script-globalsearch-main.xml)">$VAR[GlobalSearchArtInfo]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(DialogPVRInfo.xml)] + !IsEmpty(Window(Home).Property(SkinHelper.PVR.FanArt))">$INFO[Window(Home).Property(SkinHelper.PVR.FanArt)]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(DialogPVRInfo.xml)] + IsEmpty(Window(Home).Property(SkinHelper.PVR.FanArt)) + !IsEmpty(Window(Home).Property(SkinHelper.PvrBackground))">$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(DialogPVRInfo.xml)] + IsEmpty(Window(Home).Property(SkinHelper.PVR.FanArt)) + IsEmpty(Window(Home).Property(SkinHelper.PvrBackground))">pvr/background.jpg</value>
		<value condition="Window.IsVisible(weather)">$VAR[WeatherFanart]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[DefWeatherFanart]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Container(301).ListItem.Art(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)]">$INFO[Container(301).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Container(301).ListItem.Property(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)]">$INFO[Container(301).ListItem.Property(fanart)]</value>
		<value condition="Window.IsVisible(home) + StringCompare(Container(300).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		<value condition="Window.IsVisible(home) + [StringCompare(Container(300).ListItem.Property(defaultID),Weather) | IsEmpty(Container(300).ListItem.Property(defaultID)) | Container(301).IsUpdating |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Skin.String(weatherfanart)) + Skin.HasSetting(home.showweatherfanart) + [IsEmpty(Container(300).ListItem.Property(widget)) | Container(301).IsUpdating]">$INFO[Skin.String(weatherfanart)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[DefWeatherFanart]</value>
		<value condition="Window.IsVisible(home) + [StringCompare(Container(300).ListItem.Property(widget),bbc.popular) | StringCompare(Container(300).ListItem.Property(widget),bbc.sport) | StringCompare(Container(300).ListItem.Property(widget),bbc.scifi) | StringCompare(Container(300).ListItem.Property(widget),bbc.documentaries) | StringCompare(Container(300).ListItem.Property(widget),bbc.music) | StringCompare(Container(300).ListItem.Property(widget),extendedinfo.eurogamer) | StringCompare(Container(300).ListItem.Property(widget),extendedinfo.engadget) | StringCompare(Container(300).ListItem.Property(widget),extendedinfo.mobiletechreview)]">$INFO[Container(301).ListItem.Icon]</value>
		<value condition="Window.IsVisible(home) + StringCompare(Container(300).ListItem.Property(widget),LiveTV)">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<value condition="Window.IsVisible(home) + !Container(301).IsUpdating + !IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
		<value condition="Window.IsVisible(home) + !Container(301).IsUpdating">pvr/background.jpg</value>
		<value condition="[Window.IsActive(videolibrary) | Window.IsActive(movieinformation)]  +  substring(ListItem.Path,plugin://plugin.video.emby) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[ListItem.Path]extrafanart/</value>
		<value condition="[Window.IsActive(videolibrary) | Window.IsActive(movieinformation)] + Skin.HasSetting(SkinHelper.EnableExtraFanart) + !IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath)) + !StringCompare(Window(Home).Property(SkinHelper.ExtraFanArtPath),N)">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(Container(9500).ListItem.Art(fanart))">$INFO[Container(9500).ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!IsEmpty(ListItem.Label) + Container.Content(albums)">http://localhost:52307/getthumb&amp;title=$INFO[Listitem.Label]</value>
		<value condition="!IsEmpty(ListItem.Artist) + Container.Content(songs)">http://localhost:52307/getthumb&amp;title=$INFO[Listitem.Artist]</value>
		<value condition="!IsEmpty(ListItem.Artiist) + [Container.Content(artists)]">http://localhost:52307/getthumb&amp;title=$INFO[Listitem.Artist] MUSICBRAAINZ</value>
		<value condition="!IsEmpty(ListItem.Label) + [Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]">http://localhost:52307/getthumb&amp;title=$INFO[Listitem.Label]</value>
		<value condition="!IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
		<value>special://skin/extras/backgrounds/Eyes.jpg</value>
	</variable>
	<include name="GlobalVideoWindow">
		<control type="image" description="Background">
			<include>Dimensions_Fullscreen</include>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/white.png</texture>
			<visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
		</control>
		<control type="videowindow">
			<visible>Skin.HasSetting(global.showvideo)</visible>
			<include>Dimensions_Fullscreen</include>
		</control>
	</include>
	<include name="GlobalVisualisation">
		<control type="group">
			<visible>Player.HasAudio + Skin.HasSetting(global.showvisualisation)</visible>
			<control type="multiimage">
				<aspectratio>scale</aspectratio>
				<include>Dimensions_Fullscreen</include>
				<timeperimage>10000</timeperimage>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
				<visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
				<animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
				<animation effect="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
				<animation effect="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
				<animation effect="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
			</control>
			<control type="visualisation">
				<description>visualisation</description>
				<include>Dimensions_Fullscreen</include>
			</control>
		</control>
	</include>
	<include name="GlobalBackgroundFade">
		<colordiffuse>$VAR[FanartFadeLabel]</colordiffuse>
	</include>
	<include name="GlobalBackground">
		<include>GlobalVideoWindow</include>
		<include>GlobalVisualisation</include>
		<control type="image">
			<animation effect="fade" start="0" end="100" time="2300" tween="cubic" easing="inout">VisibleChange</animation>
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture background="true">$VAR[ColorboxPowerModeImage]</texture>
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogVideoInfo.xml) + !Skin.HasSetting(toggled.dv.info)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
		</control>
		<control type="image">
			<animation effect="fade" start="0" end="100" time="2300" tween="cubic" easing="inout">VisibleChange</animation>
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]">common/screen-overlay-shard.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>Window.IsVisible(DialogVideoInfo.xml) + !Skin.HasSetting(toggled.dv.info)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture background="true">$INFO[Window(home).Property(ImageFilter)]</texture>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<fadetime>600</fadetime>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(ImageColor)]">common/screen-overlay-shard.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture background="true">$VAR[ColorboxPowerModeImage]</texture>
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogAlbumInfo.xml) + !Skin.HasSetting(toggled.ai.info)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<fadetime>600</fadetime>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]">common/screen-overlay-shard.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogAlbumInfo.xml) + !Skin.HasSetting(toggled.ai.info)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<colordiffuse>DialogFanartFade</colordiffuse>
			<texture background="true">$INFO[Container(5013).ListItem.Property(GoogleMap)]</texture>
			<visible>!IsEmpty(Window(home).Property(Concerts)) + Control.HasFocus(5013) + Window.IsVisible(DialogAlbumInfo.xml)</visible>
		</control>
		<control type="image">
			<include condition="Skin.String(home.vertical,1) | Skin.String(home.vertical,2)">Dimensions_FullscreenMinusTop</include>
			<include condition="!Skin.String(home.vertical,1) + !Skin.String(home.vertical,2)">Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">$VAR[ColorboxPowerModeImage]</texture>
			<visible>Window.IsVisible(home)  + Skin.HasSetting(home.blur)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<fadetime>600</fadetime>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
		<control type="multiimage" description="Fanart">
			<include>GlobalBackgroundFade</include>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
			<visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
			<visible>!Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
			<visible>!Window.IsVisible(DialogPVRInfo.xml)</visible>
			<visible>![Window.IsVisible(home) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + Skin.HasSetting(home.blur)]</visible>
			<visible>![Control.IsVisible(518) + !Skin.HasSetting(low.power) + !StringCompare(Skin.String(background.effect),None)]</visible>
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<aspectratio>scale</aspectratio>
			<imagepath background="true">$VAR[GlobalFanart]</imagepath>
			<animation effect="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
		</control>
		<control type="image">
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogVideoInfo.xml) + Skin.HasSetting(toggled.dv.info)</visible>
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">$INFO[ListItem.Art(fanart)]</texture>
			<animation effect="fade" start="0" end="100" time="2300" tween="cubic" easing="inout">VisibleChange</animation>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation type="Visible" reversible="true">
				<effect type="fade" start="00" end="100" time="2600" tween="quadratic" easing="out" />
			</animation>
			<animation type="WindowOpen" reversible="true">
				<effect type="fade" start="00" end="100" time="2600" tween="quadratic" easing="out" delay="1000" />
			</animation>
			<animation type="WindowClose" reversible="true">
				<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out" />
			</animation>
			<animation type="Hidden" reversible="true">
				<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out" />
			</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true" diffuse="diffuse/dv-mask.png">$VAR[ColorboxPowerModeImage]</texture>
			<visible>!Skin.HasSetting(lights.out)</visible>
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogVideoInfo.xml) + Skin.HasSetting(toggled.dv.info)</visible>
		</control>
		<control type="image">
			<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + Window.IsVisible(DialogAlbumInfo.xml) + Skin.HasSetting(toggled.ai.info)</visible>
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">$INFO[ListItem.Art(fanart)]</texture>
		</control>
		<control type="image">
			<visible>Window.IsVisible(DialogPVRInfo.xml)</visible>
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(PVRInfo.ImageColor)]" background="true">special://skin/extras/backgrounds/Channels.jpg</texture>
			<visible>IsEmpty(Window(home).Property(PVRInfo.ImageFilter))</visible>
		</control>
		<control type="image">
			<visible>Window.IsVisible(DialogPVRInfo.xml)</visible>
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(PVRInfo.ImageColor)]" background="true">$INFO[Window(home).Property(PVRInfo.ImageFilter)]</texture>
			<visible>!IsEmpty(Window(home).Property(PVRInfo.ImageFilter))</visible>
		</control>
		<control id="8328" type="image">
			<include>Dimensions_Fullscreen</include>
			<colordiffuse>DialogFanartFade</colordiffuse>
			<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
			<visible>Skin.HasSetting(furniture.info.fanart)</visible>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<colordiffuse>DialogFanartFade</colordiffuse>
			<texture background="true">special://skin/extras/backgrounds/kodi.jpg</texture>
			<visible>Substring(Control.GetLabel(8328),empty.png)</visible>
			<visible>Skin.HasSetting(furniture.info.fanart)</visible>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture background="true">$INFO[Window(home).Property(VideoInfo.ImageFilter)]</texture>
			<visible>!Skin.HasSetting(furniture.info.fanart)</visible>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(VideoInfo.ImageColor)]">diffuse/diffuseoverlay.png</texture>
			<visible>!Skin.HasSetting(furniture.info.fanart)</visible>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<!--
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<width>1920</width>
			<height>1080</height>
			<aspectratio>stretch</aspectratio>
			<texture background="true">special://skin/extras/backgrounds/black_content.png</texture>
			<visible>Control.IsVisible(518)</visible>
		</control>
		-->
		<!--
		<control type="multiimage">
			<visible>StringCompare(Container(300).ListItem.Property(defaultID),movies)</visible>
			<left>0</left>
			<posy>130</posy>
			<width>1920</width>
			<height>950</height>
			<timeperimage>3000</timeperimage>
			<randomize>true</randomize>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<imagepath background="true">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</imagepath>
			<visible>[Control.HasFocus(30133) | Control.HasFocus(3013)] + !IsEmpty(Window(Home).Property(SkinHelper.AllMoviesBackground.Wall))</visible>
		</control>
		-->
		<control type="image">
			<height>130</height>
			<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">common/white.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>Skin.HasSetting(home.blur) + [Skin.String(home.vertical,1) | Skin.String(home.vertical,2)] + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + Window.IsVisible(Home.xml)</visible>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
	</include>

	<include name="ExtendedGlobalBackground">
		<include>GlobalVideoWindow</include>
		<include>GlobalVisualisation</include>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture background="true">$INFO[Window(home).Property(ImageFilter)]</texture>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<fadetime>600</fadetime>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(ImageColor)]">common/screen-overlay-shard.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
		<control type="multiimage" description="Fanart">
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<aspectratio>scale</aspectratio>
			<imagepath background="true">$VAR[GlobalFanart]</imagepath>
			<animation effect="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
		</control>
	</include>
</includes>
