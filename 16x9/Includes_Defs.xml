<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="HiddenControl">
		<left>-10</left>
		<top>-10</top>
		<width>1</width>
		<height>1</height>
		<font>-</font>
		<texture>-</texture>
		<texturefocus>-</texturefocus>
		<texturenofocus>-</texturenofocus>
		<alttexturenofocus>-</alttexturenofocus>
		<alttexturefocus>-</alttexturefocus>
		<textureradiofocus>-</textureradiofocus>
		<textureradionofocus>-</textureradionofocus>
	</include>
	<variable name="SwapDefaultImage">
		<value condition="StringCompare(ListItem.Icon,Default.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultActor.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddon.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonAlbumInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonArtistInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonLyrics.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonMovieInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonMusic.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonMusicVideoInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonNone.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonPicture.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonProgram.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonRepository.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonScreensaver.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonService.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonSkin.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonSubtitles.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonTvInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonVideo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonVisualization.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonWeather.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddonWebSkin.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAddSource.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAlbumCover.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultArtist.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultAudio.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultCDDA.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultDVDEmpty.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultDVDFull.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultDVDRom.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultFile.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultFolder.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultFolderBack.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultHardDisk.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultIconError.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultIconInfo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultIconWarning.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMovies.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicAlbums.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicArtists.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicCompilations.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicGenres.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicPlaylists.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicPlugins.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicRecentlyAdded.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicRecentlyPlayed.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicSongs.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicTop100.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicVideos.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultMusicYears.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultNetwork.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultPicture.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultPlaylist.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultProgram.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultRecentlyAddedEpisodes.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultRecentlyAddedMovies.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultRecentlyAddedMusicVideos.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultTVShows.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultVideo.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultVideoCover.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultVideoPlaylists.png)"></value>
		<value condition="StringCompare(ListItem.Icon,DefaultVideoPlugins.png)"></value>
		<value/>
	</variable>
	<variable name="DefWidgetFurniture">
		<value condition="!IsEmpty(Skin.String(furniturewidget.path))">$INFO[Skin.String(furniturewidget.path)]</value>
		<value>$VAR[DefWidgetCast]</value>
	</variable>
	<variable name="DefWidgetCast">
		<value condition="Container.Content(sets) | substring(ListItem.Path,videodb://movies/sets,left)">plugin://script.skin.helper.service/?action=getcast&amp;movieset=$INFO[ListItem.DBID]</value>
		<value condition="Container.Content(movies) + [!IsEmpty(ListItem.DBID) + IntegerGreaterThan(ListItem.DBID,-1)]">plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[ListItem.DBID]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !IsEmpty(Window(home).Property(TVShowID))">plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[Window(home).Property(TVShowID)]</value><value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[ListItem.Title]</value>
		<value>plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
	</variable>
	<variable name="DefOSDCast">
		<value condition="!IsEmpty(Window(home).Property(NextUpNotification.NowPlaying.Type)) + StringCompare(Window(home).Property(NextUpNotification.NowPlaying.Type),movie) + IntegerGreaterThan(Window(home).Property(NextUpNotification.NowPlaying.DBID),-1)">plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[Window(home).Property(NextUpNotification.NowPlaying.DBID)]</value>
		<value condition="!IsEmpty(Window(home).Property(NextUpNotification.NowPlaying.Type)) + StringCompare(Window(home).Property(NextUpNotification.NowPlaying.Type),episode) + IntegerGreaterThan(Window(home).Property(NextUpNotification.NowPlaying.DBID),-1)">plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[Window(home).Property(NextUpNotification.NowPlaying.DBID)]</value>
		<value condition="VideoPlayer.Content(movies)">plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(episodes)">plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(livetv)">plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="DefWidgetContent">
		<!-- Individual Widget Paths -->
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath))">$INFO[Container(300).ListItem.Property(widgetPath)]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),Playlist)">$INFO[Container(300).ListItem.Property(widgetPlaylist)]</value>
		<value condition="[Skin.HasSetting(home.vertical) | !Skin.HasSetting(home.classicwidgets)] + substring(Container(300).ListItem.Property(widget),Albums)">$VAR[DefWidgetContentAlbums]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),Weather) + !IsEmpty(Skin.String(weatherfanart))">$INFO[Skin.String(weatherfanart)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[DefWeatherFanart]</value>
		<!-- Background -->
		<value condition="!IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		<!-- Slideshow -->
		<value condition="Skin.HasSetting(home.dontshowfanart) + IsEmpty(Container(300).ListItem.Property(widget))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
	</variable>
	<variable name="DefWidgetContentAlbums">
		<value condition="StringCompare(Container(300).ListItem.Property(widget),RecentAlbums)">plugin://service.library.data.provider?type=recentalbums&amp;reload=$INFO[Window.Property(recentalbums)]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),RecommendedAlbums)">plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window.Property(recommendedalbums)]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),RandomAlbums)">plugin://service.library.data.provider?type=randomalbums&amp;reload=$INFO[Window.Property(randomalbums)]</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),RecentlyPlayedAlbums)">musicdb://recentlyplayedalbums/</value>
		<value condition="StringCompare(Container(300).ListItem.Property(widget),Top100Albums)">musicdb://top100/albums/</value>
	</variable>
	<variable name="DefWidget1Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath))">$INFO[Container(300).ListItem.Property(widgetPath)]</value>
		<value>plugin://script.extendedinfo?info=trendingmovies</value>
	</variable>
	<variable name="DefWidget1Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget))">$INFO[Container(300).ListItem.Property(widgetTarget)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget2Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.1))">$INFO[Container(300).ListItem.Property(widgetPath.1)]</value>
		<value>plugin://script.extendedinfo?info=trendingshows</value>
	</variable>
	<variable name="DefWidget2Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.1))">$INFO[Container(300).ListItem.Property(widgetPath.1)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget3Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.2))">$INFO[Container(300).ListItem.Property(widgetPath.2)]</value>
		<value>plugin://script.extendedinfo?info=popularmovies</value>
	</variable>
	<variable name="DefWidget3Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.2))">$INFO[Container(300).ListItem.Property(widgetTarget.2)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget4Content">
		<value condition="!IsEmpty(Skin.String(livetv1widget.path))">$INFO[Skin.String(livetv1widget.path)]</value>
		<value>plugin://script.extendedinfo?info=youtubeusersearch&amp;&amp;id=Engadget</value>
	</variable>
	<variable name="DefWidget4Target">
		<value condition="!IsEmpty(Skin.String(livetv1widget.target))">$INFO[Skin.String(livetv1widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget5Content">
		<value condition="!IsEmpty(Skin.String(livetv2widget.path))">$INFO[Skin.String(livetv2widget.path)]</value>
		<value>pvr://channels/tv/All&amp;channels/</value>
	</variable>
	<variable name="DefWidget5Target">
		<value condition="!IsEmpty(Skin.String(livetv2widget.target))">$INFO[Skin.String(livetv2widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget6Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies1))">$INFO[Container(300).ListItem.Property(widgetPath.movies1)]</value>
		<value>plugin://service.library.data.provider?type=recentmovies&amp;reload=$INFO[Window.Property(recentmovies)]</value>
	</variable>
	<variable name="DefWidget6Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies1))">$INFO[Container(300).ListItem.Property(widgetTarget.movies1)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget7Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies2))">$INFO[Container(300).ListItem.Property(widgetPath.movies2)]</value>
		<value>plugin://script.skin.helper.service/?action=recommendedmovies&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget7Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies2))">$INFO[Container(300).ListItem.Property(widgetTarget.movies2)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget8Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies3))">$INFO[Container(300).ListItem.Property(widgetPath.movies3)]</value>
		<value>plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
	</variable>
	<variable name="DefWidget8Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies3))">$INFO[Container(300).ListItem.Property(widgetTarget.movies3)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget9Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows1))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows1)]</value>
		<value>plugin://service.library.data.provider?type=recentepisodes&amp;reload=$INFO[Window.Property(recentepisodes)]</value>
	</variable>
	<variable name="DefWidget9Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows1))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows1)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget10Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows2))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows2)]</value>
		<value>plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window.Property(recommendedepisodes)]</value>
	</variable>
	<variable name="DefWidget10Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows2))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows2)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget11Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows3))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows3)]</value>
		<value>plugin://service.library.data.provider?type=randomepisodes&amp;reload=$INFO[Window.Property(randomepisodes)]</value>
	</variable>
	<variable name="DefWidget11Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows3))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows3)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget12Content">
		<value condition="!IsEmpty(Skin.String(music1widget.path))">$INFO[Skin.String(music1widget.path)]</value>
		<value>plugin://script.skin.helper.service/?action=recentalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget12Target">
		<value condition="!IsEmpty(Skin.String(music1widget.target))">$INFO[Skin.String(music1widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget13Content">
		<value condition="!IsEmpty(Skin.String(music2widget.path))">$INFO[Skin.String(music2widget.path)]</value>
		<value>plugin://script.skin.helper.service/?action=recommendedalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget13Target">
		<value condition="!IsEmpty(Skin.String(music2widget.target))">$INFO[Skin.String(music2widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget14Content">
		<value condition="!IsEmpty(Skin.String(music3widget.path))">$INFO[Skin.String(music3widget.path)]</value>
		<value>plugin://script.skin.helper.service/?action=recentplayedalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget14Target">
		<value condition="!IsEmpty(Skin.String(music3widget.target))">$INFO[Skin.String(music3widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget15Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.3))">$INFO[Container(300).ListItem.Property(widgetPath.3)]</value>
		<value>plugin://script.extendedinfo?info=topratedmovies</value>
	</variable>
	<variable name="DefWidget15Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.3))">$INFO[Container(300).ListItem.Property(widgetTarget.3)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget16Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies4))">$INFO[Container(300).ListItem.Property(widgetPath.movies4)]</value>
		<value>plugin://script.skin.helper.service/?action=similarmovies&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget16Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies4))">$INFO[Container(300).ListItem.Property(widgetTarget.movies4)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget17Content">
		<value condition="!IsEmpty(Skin.String(music4widget.path))">$INFO[Skin.String(music4widget.path)]</value>
		<value>plugin://script.skin.helper.service/?action=recentalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget17Target">
		<value condition="!IsEmpty(Skin.String(music4widget.target))">$INFO[Skin.String(music4widget.target)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget18Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows4))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows4)]</value>
		<value>plugin://script.skin.helper.service/?action=similarshows&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget18Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows4))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows4)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget19Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies5))">$INFO[Container(300).ListItem.Property(widgetPath.movies5)]</value>
		<value>plugin://script.skin.helper.service/?action=similarmovies&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget19Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies5))">$INFO[Container(300).ListItem.Property(widgetTarget.movies5)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget20Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows5))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows5)]</value>
		<value>plugin://script.skin.helper.service/?action=similarshows&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget20Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows5))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows5)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget21Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies6))">$INFO[Container(300).ListItem.Property(widgetPath.movies6)]</value>
		<value>plugin://script.skin.helper.service/?action=moviesforgenre&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget21Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies6))">$INFO[Container(300).ListItem.Property(widgetTarget.movies6)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidget22Content">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows6))">$INFO[Container(300).ListItem.Property(widgetPath.tvshows6)]</value>
		<value>plugin://script.skin.helper.service/?action=showsforgenre&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="DefWidget22Target">
		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows6))">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows6)]</value>
		<value>video</value>
	</variable>
	<variable name="DefWidgetContentVideoInfo">
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),SimilarVideos)">$VAR[SimilarVideos]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),ShowCast)">$VAR[DefWidgetCast]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RandomEpisodes)">plugin://service.library.data.provider?type=randomepisodes&amp;reload=$INFO[Window.Property(randomepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RecentEpisodes)">plugin://service.library.data.provider?type=recentepisodes&amp;reload=$INFO[Window.Property(recentepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RecommendedEpisodes)">plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window.Property(recommendedepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RandomMovies)">plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RecentMovies)">plugin://service.library.data.provider?type=recentmovies&amp;reload=$INFO[Window.Property(recentmovies)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RecommendedMovies)">plugin://script.skin.helper.service/?action=recommendedmovies&amp;limit=27&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),SimilarMovies)">plugin://script.skin.helper.service/?action=similarmovies&amp;limit=2videoinfo&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),TrendingMovies)">plugin://script.extendedinfo?info=trendingmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),InCinemas)">plugin://script.extendedinfo?info=incinemas</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),Upcoming)">plugin://script.extendedinfo?info=upcoming</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),PopularMovies)">plugin://script.extendedinfo?info=popularmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),TopRatedMovies)">plugin://script.extendedinfo?info=topratedmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),PopularTvShows)">plugin://script.extendedinfo?info=populartvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),TopRatedTvShows)">plugin://script.extendedinfo?info=topratedtvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),OnAirTvShows)">plugin://script.extendedinfo?info=onairtvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),AiringTodayTvShows)">plugin://script.extendedinfo?info=airingtodaytvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),TrendingShows)">plugin://script.extendedinfo?info=trendingshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),AiringShows)">plugin://script.extendedinfo?info=airingshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),PremiereShows)">plugin://script.extendedinfo?info=premiereshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),RecommendedShows)">plugin://script.skin.helper.service/?action=recommendedmedia&amp;limit=2videoinfo&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0) + !IsEmpty(Window(Home).Property(emby.nodes.0.content))">$INFO[Window(Home).Property(emby.nodes.0.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0recent) + !IsEmpty(Window(Home).Property(emby.nodes.0.recent.content))">$INFO[Window(Home).Property(emby.nodes.0.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.0.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.0.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode0nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.nextepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1) + !IsEmpty(Window(Home).Property(emby.nodes.1.content))">$INFO[Window(Home).Property(emby.nodes.1.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1recent) + !IsEmpty(Window(Home).Property(emby.nodes.1.recent.content))">$INFO[Window(Home).Property(emby.nodes.1.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.1.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.1.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode1nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.nextepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2) + !IsEmpty(Window(Home).Property(emby.nodes.2.content))">$INFO[Window(Home).Property(emby.nodes.2.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2recent) + !IsEmpty(Window(Home).Property(emby.nodes.2.recent.content))">$INFO[Window(Home).Property(emby.nodes.2.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.2.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.2.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfo),embynode2nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.nextepisodes.content)]</value>
		<value>$VAR[SimilarVideos]</value>
	</variable>
	<variable name="DefWidgetContentVideoInfoCast">
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),ShowCast)">$VAR[DefWidgetCast]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),SimilarVideos)">$VAR[SimilarVideos]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RandomEpisodes)">plugin://service.library.data.provider?type=randomepisodes&amp;reload=$INFO[Window.Property(randomepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RecentEpisodes)">plugin://service.library.data.provider?type=recentepisodes&amp;reload=$INFO[Window.Property(recentepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RecommendedEpisodes)">plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window.Property(recommendedepisodes)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RandomMovies)">plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RecentMovies)">plugin://service.library.data.provider?type=recentmovies&amp;reload=$INFO[Window.Property(recentmovies)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RecommendedMovies)">plugin://script.skin.helper.service/?action=recommendedmovies&amp;limit=27&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),SimilarMovies)">plugin://script.skin.helper.service/?action=similarmovies&amp;limit=2videoinfo&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),TrendingMovies)">plugin://script.extendedinfo?info=trendingmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),InCinemas)">plugin://script.extendedinfo?info=incinemas</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),Upcoming)">plugin://script.extendedinfo?info=upcoming</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),PopularMovies)">plugin://script.extendedinfo?info=popularmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),TopRatedMovies)">plugin://script.extendedinfo?info=topratedmovies</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),PopularTvShows)">plugin://script.extendedinfo?info=populartvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),TopRatedTvShows)">plugin://script.extendedinfo?info=topratedtvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),OnAirTvShows)">plugin://script.extendedinfo?info=onairtvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),AiringTodayTvShows)">plugin://script.extendedinfo?info=airingtodaytvshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),TrendingShows)">plugin://script.extendedinfo?info=trendingshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),AiringShows)">plugin://script.extendedinfo?info=airingshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),PremiereShows)">plugin://script.extendedinfo?info=premiereshows</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),RecommendedShows)">plugin://script.skin.helper.service/?action=recommendedmedia&amp;limit=2videoinfo&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0) + !IsEmpty(Window(Home).Property(emby.nodes.0.content))">$INFO[Window(Home).Property(emby.nodes.0.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0recent) + !IsEmpty(Window(Home).Property(emby.nodes.0.recent.content))">$INFO[Window(Home).Property(emby.nodes.0.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.0.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.0.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode0nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.0.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.0.nextepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1) + !IsEmpty(Window(Home).Property(emby.nodes.1.content))">$INFO[Window(Home).Property(emby.nodes.1.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1recent) + !IsEmpty(Window(Home).Property(emby.nodes.1.recent.content))">$INFO[Window(Home).Property(emby.nodes.1.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.1.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.1.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode1nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.1.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.1.nextepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2) + !IsEmpty(Window(Home).Property(emby.nodes.2.content))">$INFO[Window(Home).Property(emby.nodes.2.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2recent) + !IsEmpty(Window(Home).Property(emby.nodes.2.recent.content))">$INFO[Window(Home).Property(emby.nodes.2.recent.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2recentepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.recentepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.recentepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2inprogress) + !IsEmpty(Window(Home).Property(emby.nodes.2.inprogress.content))">$INFO[Window(Home).Property(emby.nodes.2.inprogress.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2inprogressepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.inprogressepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.inprogressepisodes.content)]</value>
		<value condition="Stringcompare(Skin.String(widgetvideoinfocast),embynode2nextepisodes) + !IsEmpty(Window(Home).Property(emby.nodes.2.nextepisodes.content))">$INFO[Window(Home).Property(emby.nodes.2.nextepisodes.content)]</value>
		<value>$VAR[DefWidgetCast]</value>
	</variable>
	<variable name="DefWidgetContentMusicInfo">
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),Discography)">plugin://script.extendedinfo?info=discography&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),SimilarArtists)">plugin://script.extendedinfo?info=similarartistsinlibrary&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),Events)">plugin://script.extendedinfo?info=artistevents&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),MostLoved)">plugin://script.extendedinfo?info=mostlovedtracks&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),RandomMusic)">plugin://service.library.data.provider?type=randomalbums&amp;reload=$INFO[Window.Property(randomalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),RecentMusic)">plugin://service.library.data.provider?type=recentalbums&amp;reload=$INFO[Window.Property(recentalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),RecommendedMusic)">plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window.Property(recommendedalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),RecentPlayedMusic)">musicdb://recentlyplayedalbums/</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),Top100Music)">musicdb://top100/albums/</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),PopularArtists)">plugin://script.extendedinfo?info=topartists</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfo),HypedArtists)">plugin://script.extendedinfo?info=topartists</value>
		<value>plugin://script.extendedinfo?info=discography&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
	</variable>
	<variable name="DefWidgetContentMusicInfoCast">
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),Discography)">plugin://script.extendedinfo?info=discography&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),SimilarArtists)">plugin://script.extendedinfo?info=similarartistsinlibrary&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),Events)">plugin://script.extendedinfo?info=artistevents&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),MostLoved)">plugin://script.extendedinfo?info=mostlovedtracks&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),RandomMusic)">plugin://service.library.data.provider?type=randomalbums&amp;reload=$INFO[Window.Property(randomalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),RecentMusic)">plugin://service.library.data.provider?type=recentalbums&amp;reload=$INFO[Window.Property(recentalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),RecommendedMusic)">plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window.Property(recommendedalbums)]</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),RecentPlayedMusic)">musicdb://recentlyplayedalbums/</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),Top100Music)">musicdb://top100/albums/</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),PopularArtists)">plugin://script.extendedinfo?info=topartists</value>
		<value condition="Stringcompare(Skin.String(widgetmusicinfocast),HypedArtists)">plugin://script.extendedinfo?info=topartists</value>
		<value>plugin://script.extendedinfo?info=discography&amp;&amp;artistname=$INFO[ListItem.Artist]</value>
	</variable>
	<include name="DefNextAiredWidget">
		<item id="1">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.1.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.1.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.1.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.1.AirTime)]$INFO[Window.Property(NextAired.1.Network), - ,]$INFO[Window.Property(NextAired.1.Status), - ,]$INFO[Window.Property(NextAired.1.Classification),[CR],]$INFO[Window.Property(NextAired.1.Genre), - ,]$INFO[Window.Property(NextAired.1.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.1.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.1.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.1.NextNumber)]$INFO[Window.Property(NextAired.1.NextTitle), ,]$INFO[Window.Property(NextAired.1.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.1.Label))</visible>
		</item>
		<item id="2">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.2.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.2.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.2.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.2.AirTime),, - ]$INFO[Window.Property(NextAired.2.Network)]$INFO[Window.Property(NextAired.2.Status), - ,]$INFO[Window.Property(NextAired.2.Classification),[CR],]$INFO[Window.Property(NextAired.2.Genre), - ,]$INFO[Window.Property(NextAired.2.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.2.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.2.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.2.NextNumber)]$INFO[Window.Property(NextAired.2.NextTitle), ,]$INFO[Window.Property(NextAired.2.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.2.Label))</visible>
		</item>
		<item id="3">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.3.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.3.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.3.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.3.AirTime),, - ]$INFO[Window.Property(NextAired.3.Network)]$INFO[Window.Property(NextAired.3.Status), - ,]$INFO[Window.Property(NextAired.3.Classification),[CR],]$INFO[Window.Property(NextAired.3.Genre), - ,]$INFO[Window.Property(NextAired.3.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.3.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.3.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.3.NextNumber)]$INFO[Window.Property(NextAired.3.NextTitle), ,]$INFO[Window.Property(NextAired.3.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.3.Label))</visible>
		</item>
		<item id="4">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.4.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.4.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.4.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.4.AirTime),, - ]$INFO[Window.Property(NextAired.4.Network)]$INFO[Window.Property(NextAired.4.Status), - ,]$INFO[Window.Property(NextAired.4.Classification),[CR],]$INFO[Window.Property(NextAired.4.Genre), - ,]$INFO[Window.Property(NextAired.4.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.4.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.4.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.4.NextNumber)]$INFO[Window.Property(NextAired.4.NextTitle), ,]$INFO[Window.Property(NextAired.4.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.4.Label))</visible>
		</item>
		<item id="5">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.5.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.5.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.5.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.5.AirTime),, - ]$INFO[Window.Property(NextAired.5.Network)]$INFO[Window.Property(NextAired.5.Status), - ,]$INFO[Window.Property(NextAired.5.Classification),[CR],]$INFO[Window.Property(NextAired.5.Genre), - ,]$INFO[Window.Property(NextAired.5.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.5.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.5.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.5.NextNumber)]$INFO[Window.Property(NextAired.5.NextTitle), ,]$INFO[Window.Property(NextAired.5.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.5.Label))</visible>
		</item>
		<item id="6">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.6.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.6.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.6.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.6.AirTime),, - ]$INFO[Window.Property(NextAired.6.Network)]$INFO[Window.Property(NextAired.6.Status), - ,]$INFO[Window.Property(NextAired.6.Classification),[CR],]$INFO[Window.Property(NextAired.6.Genre), - ,]$INFO[Window.Property(NextAired.6.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.6.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.6.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.6.NextNumber)]$INFO[Window.Property(NextAired.6.NextTitle), ,]$INFO[Window.Property(NextAired.6.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.6.Label))</visible>
		</item>
		<item id="7">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.7.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.7.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.7.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.7.AirTime),, - ]$INFO[Window.Property(NextAired.7.Network)]$INFO[Window.Property(NextAired.7.Status), - ,]$INFO[Window.Property(NextAired.7.Classification),[CR],]$INFO[Window.Property(NextAired.7.Genre), - ,]$INFO[Window.Property(NextAired.7.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.7.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.7.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.7.NextNumber)]$INFO[Window.Property(NextAired.7.NextTitle), ,]$INFO[Window.Property(NextAired.7.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.7.Label))</visible>
		</item>
		<item id="8">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.8.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.8.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.8.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.8.AirTime),, - ]$INFO[Window.Property(NextAired.8.Network)]$INFO[Window.Property(NextAired.8.Status), - ,]$INFO[Window.Property(NextAired.8.Classification),[CR],]$INFO[Window.Property(NextAired.8.Genre), - ,]$INFO[Window.Property(NextAired.8.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.8.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.8.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.8.NextNumber)]$INFO[Window.Property(NextAired.8.NextTitle), ,]$INFO[Window.Property(NextAired.8.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.8.Label))</visible>
		</item>
		<item id="9">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.9.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.9.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.9.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.9.AirTime),, - ]$INFO[Window.Property(NextAired.9.Network)]$INFO[Window.Property(NextAired.9.Status), - ,]$INFO[Window.Property(NextAired.9.Classification),[CR],]$INFO[Window.Property(NextAired.9.Genre), - ,]$INFO[Window.Property(NextAired.9.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.9.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.9.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.9.NextNumber)]$INFO[Window.Property(NextAired.9.NextTitle), ,]$INFO[Window.Property(NextAired.9.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.9.Label))</visible>
		</item>
		<item id="10">
			<onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.10.Library)],return)</onclick>
			<property name="Fanart">$INFO[Window.Property(NextAired.10.Art(fanart))]</property>
			<icon>$INFO[Window.Property(NextAired.10.Art(poster))]</icon>
			<property name="Plot">$INFO[Window.Property(NextAired.10.AirTime),, - ]$INFO[Window.Property(NextAired.10.Network)]$INFO[Window.Property(NextAired.10.Status), - ,]$INFO[Window.Property(NextAired.10.Classification),[CR],]$INFO[Window.Property(NextAired.10.Genre), - ,]$INFO[Window.Property(NextAired.10.Runtime),[CR], $LOCALIZE[12391]]</property>
			<property name="Logo">$INFO[Window.Property(NextAired.10.Art(clearlogo))]</property>
			<label>$INFO[Window.Property(NextAired.10.Label)]</label>
			<label2>$INFO[Window.Property(NextAired.10.NextNumber)]$INFO[Window.Property(NextAired.10.NextTitle), ,]$INFO[Window.Property(NextAired.10.NextDate), • ,]</label2>
			<visible>StringCompare(Container(300).ListItem.Property(widget),NextAired) + !IsEmpty(Window.Property(NextAired.10.Label))</visible>
		</item>
	</include>
	<include name="DefFavouritesWidget">
		<item id="11" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.1.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.1.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.1.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.1.path)]</onclick>
		</item>
		<item id="12" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.2.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.2.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.2.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.2.path)]</onclick>
		</item>
		<item id="13" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.3.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.3.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.3.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.3.path)]</onclick>
		</item>
		<item id="14" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.4.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.4.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.4.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.4.path)]</onclick>
		</item>
		<item id="15" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.5.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.5.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.5.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.5.path)]</onclick>
		</item>
		<item id="16" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.6.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.6.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.6.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.6.path)]</onclick>
		</item>
		<item id="17" description="AutoFavourite">
			<visible>StringCompare(Container(300).ListItem.Property(widget),Favourites) + !IsEmpty(Window(Home).Property(favourite.7.path))</visible>
			<label>$INFO[Window(Home).Property(favourite.7.name)]</label>
			<icon>$INFO[Window(Home).Property(favourite.7.thumb)]</icon>
			<property name="ItemType">$LOCALIZE[1036]</property>
			<onclick>$INFO[Window(Home).Property(favourite.7.path)]</onclick>
		</item>
	</include>
	<include name="DefWeatherMaps">
		<item id="1">
			<label>$INFO[Window(weather).Property(Map.1.Heading)]</label>
			<label2>$INFO[Window(weather).Property(Map.1.Legend)]</label2>
			<icon>$INFO[Window(weather).Property(Map.1.Area)]</icon>
			<property name="Layer">$INFO[Window(weather).Property(Map.1.Layer)]</property>
			<onclick>ShowPicture(Window(weather).Property(Map.1.Area))</onclick>
			<visible>Weather.IsFetched + !IsEmpty(Window(weather).Property(Map.1.Area)) + !IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</item>
		<item id="2">
			<label>$INFO[Window(weather).Property(Map.2.Heading)]</label>
			<label2>$INFO[Window(weather).Property(Map.2.Legend)]</label2>
			<icon>$INFO[Window(weather).Property(Map.2.Area)]</icon>
			<property name="Layer">$INFO[Window(weather).Property(Map.2.Layer)]</property>
			<onclick>ShowPicture(Window(weather).Property(Map.2.Area))</onclick>
			<visible>Weather.IsFetched + !IsEmpty(Window(weather).Property(Map.2.Area)) + !IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</item>
		<item id="3">
			<label>$INFO[Window(weather).Property(Map.3.Heading)]</label>
			<label2>$INFO[Window(weather).Property(Map.3.Legend)]</label2>
			<icon>$INFO[Window(weather).Property(Map.3.Area)]</icon>
			<property name="Layer">$INFO[Window(weather).Property(Map.3.Layer)]</property>
			<onclick>ShowPicture(Window(weather).Property(Map.3.Area))</onclick>
			<visible>Weather.IsFetched + !IsEmpty(Window(weather).Property(Map.3.Area)) + !IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</item>
		<item id="4">
			<label>$INFO[Window(weather).Property(Map.4.Heading)]</label>
			<label2>$INFO[Window(weather).Property(Map.4.Legend)]</label2>
			<icon>$INFO[Window(weather).Property(Map.4.Area)]</icon>
			<property name="Layer">$INFO[Window(weather).Property(Map.4.Layer)]</property>
			<onclick>ShowPicture(Window(weather).Property(Map.4.Area))</onclick>
			<visible>Weather.IsFetched + !IsEmpty(Window(weather).Property(Map.4.Area)) + !IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</item>
		<item id="5">
			<label>$INFO[Window(weather).Property(Map.5.Heading)]</label>
			<label2>$INFO[Window(weather).Property(Map.5.Legend)]</label2>
			<icon>$INFO[Window(weather).Property(Map.5.Area)]</icon>
			<property name="Layer">$INFO[Window(weather).Property(Map.5.Layer)]</property>
			<onclick>ShowPicture(Window(weather).Property(Map.5.Area))</onclick>
			<visible>Weather.IsFetched + !IsEmpty(Window(weather).Property(Map.5.Area)) + !IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</item>
	</include>
	<include name="DefDialogButtons">
		<width>380</width>
		<font>Button</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<disabledcolor>$VAR[DisabledColour]</disabledcolor>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</texturefocus>
	</include>
	<include name="DefDialogInfoPanel">
		<include>Animation.FadeIn.Slide</include>
		<include>Animation.FadeOut</include>
		<centerleft>50%</centerleft>
		<top>TopPad</top>
		<width>1320</width>
		<height>860</height>
		<control type="image">
			<top>92</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<control type="image">
			<height>92</height>
			<texture>common/white.png</texture>
			<colordiffuse>$VAR[EmbyMenuTextColourHighlight]</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<include name="DefDialogAddonPanel">
		<include>Animation.FadeIn.Slide</include>
		<include>Animation.FadeOut</include>
		<centerleft>50%</centerleft>
		<top>TopPad</top>
		<width>1820</width>
		<height>860</height>
		<control type="image">
			<top>92</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<control type="image">
			<height>92</height>
			<texture>common/white.png</texture>
			<colordiffuse>$VAR[EmbyMenuTextColourHighlight]</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<include name="DefDialogInfoHeader">
		<left>30</left>
		<right>320</right>
		<posy>18</posy>
		<font>settingsheader</font>
		<align>left</align>
		<textcolor>$VAR[EmbyMenuColourHighlight]</textcolor>
		<textureradiofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
	</include>
	<include name="DefDialogHeader">
		<description>header label</description>
		<centerleft>50%</centerleft>
		<posy>17</posy>
		<width>990</width>
		<align>center</align>
		<font>settingsheader</font>
		<textcolor>$VAR[EmbyMenuColourHighlight]</textcolor>
	</include>
	<include name="DefDialogBackground">
		<include>Animation.ZoomIn</include>
		<centerleft>50%</centerleft>
		<centertop>50%</centertop>
		<height>892</height>
		<width>1080</width>
		<control type="image">
			<width>1080</width>
			<top>92</top>
			<height>800</height>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<control type="image">
			<width>1080</width>
			<height>92</height>
			<texture>common/white.png</texture>
			<colordiffuse>$VAR[EmbyMenuTextColourHighlight]</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<include name="DefDialogInfoPanel2">
		<include>Animation.FadeIn.Slide</include>
		<include>Animation.FadeOut</include>
		<centerleft>50%</centerleft>
		<centertop>50%</centertop>
		<width>1320</width>
		<height>1080</height>
		<control type="image">
			<top>92</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<control type="image">
			<height>92</height>
			<texture>common/white.png</texture>
			<colordiffuse>$VAR[EmbyMenuTextColourHighlight]</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<include name="DefDialogOK">
		<centerleft>50%</centerleft>
		<posy>360</posy>
		<width>900</width>
		<include>Animation.FadeIn.Slide</include>
		<control type="image">
			<posx>-30</posx>
			<posy>40</posy>
			<width>960</width>
			<height>374</height>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<control type="image">
			<posx>-30</posx>
			<posy>-30</posy>
			<width>960</width>
			<height>72</height>
			<texture>common/white.png</texture>
			<colordiffuse>$VAR[EmbyMenuTextColourHighlight]</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="label" id="1">
			<description>Heading</description>
			<centerleft>50%</centerleft>
			<width>885</width>
			<font>settingsheader</font>
			<top>-26</top>
			<align>center</align>
			<textcolor>$VAR[EmbyMenuColourHighlight]</textcolor>
		</control>
		<control type="textbox" id="9">
			<description>Line 1</description>
			<left>15</left>
			<right>15</right>
			<posy>108</posy>
			<height>300</height>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		</control>
	</include>
	<include name="DefPVRDialogButton">
		<width>600</width>
		<height>66</height>
		<align>left</align>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</texturefocus>
		<radioposx>540</radioposx>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-off.png</textureradionofocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<alttexturefocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/white.png</alttexturefocus>
		<alttexturenofocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturenofocus>
	</include>
	<include name="DefKeyboardKeys">
		<width>85</width>
		<height>75</height>
		<texturenofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</texturefocus>
		<textoffsetx>0</textoffsetx>
		<textcolor>$VAR[EmbyMenuColourHighlight]</textcolor>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<radioposx>320</radioposx>
		<radioposy>22</radioposy>
	</include>
	<include name="DefKeyboardKeysNumeric">
		<width>85</width>
		<height>75</height>
		<textoffsetx>0</textoffsetx>
		<texturenofocus colordiffuse="$VAR[DisabledColour]">-</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">-</texturefocus>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<selectedcolor>$VAR[ColourHighlight]</selectedcolor>
		<focusedcolor>$VAR[ColourHighlight]</focusedcolor>
		<radioposx>320</radioposx>
		<radioposy>22</radioposy>
	</include>
	<include name="DefCustomSearchKeyboardKeys">
		<width>90</width>
		<height>90</height>
		<texturenofocus colordiffuse="white3">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</texturefocus>
		<textoffsetx>0</textoffsetx>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<radioposx>320</radioposx>
		<radioposy>22</radioposy>
	</include>
	<include name="DefContextButton">
		<radioposx>400</radioposx>
		<width>430</width>
		<height>70</height>
		<font>Tiny</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<textureradiofocus colordiffuse="$VAR[ColourHighlight2]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<alttexturefocus colordiffuse="Dark1">common/white.png</alttexturefocus>
		<texturefocus colordiffuse="Dark1">common/white.png</texturefocus>
	</include>
	<include name="DefContextButton2">
		<textoffsetx>5</textoffsetx>
		<radioposx>400</radioposx>
		<width>433</width>
		<height>55</height>
		<font>Mini</font>
		<textcolor>black</textcolor>
		<textureradiofocus colordiffuse="$VAR[ColourHighlight2]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<alttexturefocus colordiffuse="white">common/white.png</alttexturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/white.png</texturefocus>
	</include>
	<include name="DefContextButtonBlade">
		<textoffsetx>5</textoffsetx>
		<radioposx>415</radioposx>
		<width>455</width>
		<height>55</height>
		<font>MiniSystem</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-off.png</textureradionofocus>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<alttexturefocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/white.png</texturefocus>
	</include>
	<include name="DefContextButtonBladeUp">
		<textoffsetx>5</textoffsetx>
		<radioposx>415</radioposx>
		<width>894</width>
		<height>67.27272727272727</height>
		<font>MiniSystem</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-off.png</textureradionofocus>
		<focusedcolor>$VAR[ColourSelected]</focusedcolor>
		<alttexturefocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/white.png</texturefocus>
	</include>
	<include name="DefSettingsButton2">
		<radioposx>1330</radioposx>
		<align>left</align>
		<font>Small</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<disabledcolor>$VAR[DisabledColour]</disabledcolor>
		<height>103</height>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-off.png</textureradionofocus>
		<texturefocus colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<alttexturefocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/white.png</alttexturefocus>
		<alttexturenofocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturenofocus>
	</include>
	<include name="DefSettingsButton3">
		<radioposx>1330</radioposx>
		<align>left</align>
		<font>symbol</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<disabledcolor>$VAR[DisabledColour]</disabledcolor>
		<height>103</height>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-off.png</textureradionofocus>
		<texturefocus colordiffuse="$VAR[EmbyMiddleColourHighlight]">common/box.png</texturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<alttexturefocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/white.png</alttexturefocus>
		<alttexturenofocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturenofocus>
	</include>
	<include name="DefSettingsButton4">
		<radioposx>1330</radioposx>
		<align>center</align>
		<font>Small</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<disabledcolor>$VAR[DisabledColour]</disabledcolor>
		<height>60</height>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-off.png</textureradionofocus>
		<texturefocus colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<alttexturefocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/white.png</alttexturefocus>
		<alttexturenofocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturenofocus>
	</include>
	<include name="DefPVRChannelsButton">
		<radioposx>550</radioposx>
		<align>left</align>
		<font>Small</font>
		<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		<disabledcolor>$VAR[DisabledColour]</disabledcolor>
		<height>64</height>
		<textureup flipy="true" colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</textureup>
		<texturedown colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedown>
		<textureupfocus flipy="true" colordiffuse="$VAR[ColourSelected]">buttons/spin-down.png</textureupfocus>
		<texturedownfocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/spin-down.png</texturedownfocus>
		<textureradiofocus colordiffuse="$VAR[ColourSelected]">buttons/radio-on.png</textureradiofocus>
		<textureradionofocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">buttons/radio-off.png</textureradionofocus>
		<texturefocus colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texturefocus>
		<texturenofocus colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texturenofocus>
		<alttexturefocus colordiffuse="$VAR[EmbyMenuTextColourHighlight]">common/white.png</alttexturefocus>
		<alttexturenofocus colordiffuse="$VAR[ColourHighlight]">common/white.png</alttexturenofocus>
	</include>
	<include name="Def9000SettingsMenu">
		<control type="group">
			<visible>ControlGroup(9000).HasFocus()</visible>
			
		</control>
		<control type="group">
			<include>Def9000SideBladeLeft</include>
			<control type="grouplist" id="9000">
				<left>0</left>
				<top>115</top>
				<width>455</width>
				<height>1080</height>
				<onright condition="Window.IsVisible(SettingsCategory.xml)">3</onright>
				<onright condition="!Window.IsVisible(SettingsCategory.xml)">9101</onright>
				<onback condition="Window.IsVisible(SettingsCategory.xml)">3</onback>
				<onback condition="!Window.IsVisible(SettingsCategory.xml)">9101</onback>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onback>ClearProperty(MediaMenu,Home)</onback>
				<onback>50</onback>
				<itemgap>0</itemgap>
				<animation effect="slide" start="-455,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
				<control type="label" id="200">
					<height>42</height>
					<textoffsetx>5</textoffsetx>
					<font>settingsheader</font>
					<label>$LOCALIZE[13000] $LOCALIZE[21417]</label>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<aligny>center</aligny>
				</control>
				<control type="button" id="9001">
					<onclick>ReplaceWindow(AppearanceSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>480</label>
				</control>
				<control type="button" id="9002">
					<onclick>ReplaceWindow(VideosSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>3</label>
				</control>
				<control type="button" id="9003">
					<onclick>ReplaceWindow(MusicSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>2</label>
				</control>
				<control type="button" id="9004">
					<onclick>ReplaceWindow(AddonBrowser)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>24001</label>
				</control>
				<control type="button" id="9005">
					<onclick>ReplaceWindow(PicturesSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>1</label>
				</control>
				<control type="button" id="9006">
					<onclick>ReplaceWindow(WeatherSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>8</label>
				</control>
				<control type="button" id="9007">
					<onclick>ReplaceWindow(NetworkSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>705</label>
				</control>
				<control type="button" id="9008">
					<onclick>ReplaceWindow(SystemSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>13000</label>
				</control>
				<control type="button" id="9010">
					<onclick>ReplaceWindow(PVRSettings)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>19191</label>
				</control>
				<control type="button" id="9011">
					<onclick>ReplaceWindow(7)</onclick>
					<onclick>SetFocus(3)</onclick>
					<include>DefContextButtonBlade</include>
					<label>130</label>
				</control>
				<control type="button" id="9012">
					<onclick>ReplaceWindow(SkinSettings)</onclick>
					<include>DefContextButtonBlade</include>
					<label>20077</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Def9000SideBladeLeft">
		<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
		<include>Animation.SideSlide</include>
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>455</width>
			<height>1104</height>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<include name="EuniqueLogoHorizontal">
			<param name="left" value="0"/>
			<param name="left2" value="65"/>
			<param name="left3" value="130"/>
			<param name="left4" value="195"/>
			<param name="left5" value="260"/>
			<param name="left6" value="325"/>
			<param name="left7" value="390"/>
			<param name="top" value="0"/>
			<param name="top2" value="25"/>
			<param name="width" value="65"/>
			<param name="height" value="65"/>
			<param name="font" value="LargeBoldReg"/>
		</include>
	</include>
	<include name="Def9000SideBladeLeftTV">
		<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
		<include>Animation.SideSlide</include>
		<control type="image">
			<width>455</width>
			<height>1104</height>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<include name="EuniqueLogoHorizontal">
			<param name="left" value="0"/>
			<param name="left2" value="65"/>
			<param name="left3" value="130"/>
			<param name="left4" value="195"/>
			<param name="left5" value="260"/>
			<param name="left6" value="325"/>
			<param name="left7" value="390"/>
			<param name="top" value="0"/>
			<param name="top2" value="25"/>
			<param name="width" value="65"/>
			<param name="height" value="65"/>
			<param name="font" value="LargeBoldReg"/>
		</include>
	</include>
	<include name="DefSideBladeLeft">
		<include>Animation.SideSlideRight</include>
		<control type="image">
			<left>0</left>
			<width>455</width>
			<height>1104</height>
			<texture colordiffuse="$VAR[EmbyMenuColourHighlight]">common/box.png</texture>
		</control>
		<left>1920</left>
	</include>
	<include name="Def9000MediaMenuTop">
		<left>0</left>
		<top>115</top>
		<width>455</width>
		<height>1080</height>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright condition="![Window.IsVisible(tvguide) | Window.IsActive(SettingsCategory.xml)]">50</onright>
		<onright condition="Window.IsVisible(tvguide)">10</onright>
		<onright condition="Window.IsActive(SettingsCategory.xml)">3</onright>
		<onleft>ClearProperty(MediaMenu,Home)</onleft>
		<onleft condition="![Window.IsVisible(tvguide) | Window.IsActive(SettingsCategory.xml)]">50</onleft>
		<onleft condition="Window.IsVisible(tvguide)">10</onleft>
		<onleft condition="Window.IsActive(SettingsCategory.xml)">3</onleft>
		<onup>9000</onup>
		<ondown>9000</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<itemgap>0</itemgap>
		<animation effect="slide" start="-455,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
		<control type="label" id="200">
			<height>42</height>
			<textoffsetx>5</textoffsetx>
			<font>settingsheader</font>
			<label>14018</label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<aligny>center</aligny>
		</control>
		<control type="button" id="9326">
			<description>View</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[24140]: $INFO[Container.Viewmode]</label>
			<onclick>XBMC.RunScript(script.skin.helper.service,action=setview)</onclick>
		</control>
		<control type="button" id="3">
			<description>Sort</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
		</control>
		<control type="togglebutton" id="4">
			<description>Ascending</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>584</label>
			<altlabel>585</altlabel>
		</control>
		<control type="button" id="334">
			<description>widget</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31951]: $VAR[FurnitureWidgetLabel]</label>
			<onclick>RunScript(script.skinshortcuts,type=widgets&amp;showNone=True&amp;skinWidgetName=furniturewidget.name&amp;skinWidgetTarget=furniturewidget.target&amp;skinWidgetPath=furniturewidget.path)</onclick>
			<visible>!Control.IsVisible(52) + !Control.IsVisible(54) + !Control.IsVisible(515) + !Control.IsVisible(53) + !Control.IsVisible(500)</visible>
		</control>
		<control type="button" id="335">
			<description>widget</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31946]:   $INFO[Skin.String(border.image)]</label>
			<onclick>ActivateWindow(1114)</onclick>
		</control>
		<control type="button" id="336">
			<description>widget</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[32089]: $INFO[Skin.String(background.effect)]</label>
			<onclick>SetProperty(Dialog.NumItems,5)</onclick>
			<onclick>SetProperty(Dialog.1.Label,Blur)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(background.effect,Blur))</onclick>
			<onclick>SetProperty(Dialog.2.Label,Pixelate)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(background.effect,Pixelate))</onclick>
			<onclick>SetProperty(Dialog.3.Label,Posterize)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(background.effect,Posterize))</onclick>
			<onclick>SetProperty(Dialog.4.Label,Distort)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(background.effect,Distort))</onclick>
			<onclick>SetProperty(Dialog.5.Label,None)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(background.effect,None))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Background Effect)</onclick>
			<visible>Control.IsVisible(50) | Control.IsVisible(51)</visible>
		</control>
		<!--
		<control type="button" id="337">
			<description>dv fanart</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[32111]: $INFO[Skin.String(fanart.effect)]</label>
			<onclick>SetProperty(Dialog.NumItems,5)</onclick>
			<onclick>SetProperty(Dialog.1.Label,Blur)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(fanart.effect,Blur))</onclick>
			<onclick>SetProperty(Dialog.2.Label,Pixelate)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(fanart.effect,Pixelate))</onclick>
			<onclick>SetProperty(Dialog.3.Label,Posterize)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(fanart.effect,Posterize))</onclick>
			<onclick>SetProperty(Dialog.4.Label,Distort)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(fanart.effect,Distort))</onclick>
			<onclick>SetProperty(Dialog.5.Label,None)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(fanart.effect,None))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Fanart Effect)</onclick>
			<visible>Control.IsVisible(50) | Control.IsVisible(56)</visible>
		</control>
		-->
		<control type="radiobutton" id="9001" description="Plot Overlay">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31255</label>
			<selected>Skin.HasSetting(furniture.overlayinfo)</selected>
			<onclick>Skin.ToggleSetting(furniture.overlayinfo)</onclick>
		</control>
		<control type="radiobutton" id="9031" description="Banner show poster (54)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31147</label>
			<selected>Skin.HasSetting(54banner.showinfo)</selected>
			<onclick>Skin.ToggleSetting(54banner.showinfo)</onclick>
			<visible>Control.IsVisible(54) + !Container.Content(seasons)</visible>
		</control>
		<!--<control type="radiobutton" id="9017" description="Animate Discart (513,514)"><include>DefContextButtonBlade</include><align>left</align><label> - Rotate DiscArt</label><selected>Skin.HasSetting(AnimateDiscArt)</selected><onclick>Skin.ToggleSetting(AnimateDiscArt)</onclick><visible>Control.IsVisible(513) | Control.IsVisible(514)</visible><visible>Skin.HasSetting(views.discart)</visible></control><control type="radiobutton" id="9018" description="Cases (513,514,50,53,56)"><include>DefContextButtonBlade</include><align>left</align><label>Use Cases</label><selected>Skin.HasSetting(views.cases)</selected><onclick>Skin.ToggleSetting(views.cases)</onclick><visible>Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(50) | Control.IsVisible(53) | Control.IsVisible(58)</visible></control><control type="radiobutton" id="9019" description="Clear Cases (513,514,50,53,56)"><include>DefContextButtonBlade</include><align>left</align><label> - Clear Cases</label><selected>Skin.HasSetting(views.clearcases)</selected><onclick>Skin.Reset(views.bddvdcases)</onclick><onclick>Skin.Reset(views.colourcases)</onclick><onclick>Skin.ToggleSetting(views.clearcases)</onclick><visible>Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(50) | Control.IsVisible(53) | Control.IsVisible(58)</visible><visible>Skin.HasSetting(views.cases)</visible></control><control type="radiobutton" id="9020" description="Colour Cases (513,514,50,53,56)"><include>DefContextButtonBlade</include><align>left</align><label> - Colour Cases</label><selected>Skin.HasSetting(views.colourcases)</selected><onclick>Skin.Reset(views.bddvdcases)</onclick><onclick>Skin.Reset(views.clearcases)</onclick><onclick>Skin.ToggleSetting(views.colourcases)</onclick><visible>Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(50) | Control.IsVisible(53) | Control.IsVisible(58)</visible><visible>Skin.HasSetting(views.cases)</visible></control><control type="radiobutton" id="9021" description="BD/DVD Cases (513,514,50,53,56)"><include>DefContextButtonBlade</include><align>left</align><label> - BD/DVD Cases</label><selected>Skin.HasSetting(views.bddvdcases)</selected><onclick>Skin.Reset(views.colourcases)</onclick><onclick>Skin.Reset(views.clearcases)</onclick><onclick>Skin.ToggleSetting(views.bddvdcases)</onclick><visible>Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(50) | Control.IsVisible(53) | Control.IsVisible(58)</visible><visible>Skin.HasSetting(views.cases)</visible></control>--><control type="radiobutton" id="9032" description="Title Overlay (515)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31844] $LOCALIZE[369] $LOCALIZE[31845]</label>
			<selected>Skin.HasSetting(views.titleoverlay)</selected>
			<onclick>Skin.ToggleSetting(views.titleoverlay)</onclick>
			<visible>Control.IsVisible(515)</visible>
		</control>
		<control type="radiobutton" id="9033" description="Prefer Fanart (500)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31844] $LOCALIZE[31846] $LOCALIZE[31813]</label>
			<selected>Skin.HasSetting(views.500.showfanart)</selected>
			<onclick>Skin.ToggleSetting(views.500.showfanart)</onclick>
			<visible>Control.IsVisible(500)</visible>
		</control>
		<control type="radiobutton" id="9034" description="Prefer Fanart (51)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31844] $LOCALIZE[31846] $LOCALIZE[31813]</label>
			<selected>Skin.HasSetting(views.51.showfanart)</selected>
			<onclick>Skin.ToggleSetting(views.51.showfanart)</onclick>
			<visible>Control.IsVisible(51)</visible>
		</control>
		<control type="radiobutton" id="9038" description="Show Tick (155)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[32090]</label>
			<selected>Skin.HasSetting(views.155.showtick)</selected>
			<onclick>Skin.ToggleSetting(views.155.showtick)</onclick>
			<visible>Control.IsVisible(155)</visible>
		</control>
	</include>
	<include name="Def9000MusicSide">
		<left>0</left>
		<top>115</top>
		<width>455</width>
		<height>1080</height>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright condition="![Window.IsVisible(tvguide) | Window.IsActive(SettingsCategory.xml)]">50</onright>
		<onright condition="Window.IsVisible(tvguide)">10</onright>
		<onright condition="Window.IsActive(SettingsCategory.xml)">3</onright>
		<onleft>ClearProperty(MediaMenu,Home)</onleft>
		<onleft condition="![Window.IsVisible(tvguide) | Window.IsActive(SettingsCategory.xml)]">50</onleft>
		<onleft condition="Window.IsVisible(tvguide)">10</onleft>
		<onleft condition="Window.IsActive(SettingsCategory.xml)">3</onleft>
		<onup>9000</onup>
		<ondown>9000</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<itemgap>0</itemgap>
		<animation effect="slide" start="-455,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
		<control type="label" id="200">
			<height>42</height>
			<textoffsetx>5</textoffsetx>
			<font>settingsheader</font>
			<label>14018</label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<aligny>center</aligny>
		</control>
		<control type="button" id="9326">
			<description>View</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[24140]: $INFO[Container.Viewmode]</label>
			<onclick>XBMC.RunScript(script.skin.helper.service,action=setview)</onclick>
		</control>
		<control type="button" id="3">
			<description>Sort</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
		</control>
		<control type="togglebutton" id="4">
			<description>Ascending</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>584</label>
			<altlabel>585</altlabel>
		</control>
		<control type="button" id="5">
			<description>Files</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>744</label>
			<onclick>SetFocus(50)</onclick>
			<visible>Window.IsVisible(MyMusicNav.xml)</visible>
		</control>
		<control type="button" id="7">
			<description>Playlist</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>136</label>
			<onclick>SetFocus(50)</onclick>
			<visible>Window.IsVisible(MyMusicSongs.xml)</visible>
			<visible>!stringcompare(Container.FolderPath,special://musicplaylists/)</visible>
		</control>
		<!--<control type="button" id="334"><description>widget</description><include>DefContextButtonBlade</include><align>left</align><label>$LOCALIZE[31951]: $VAR[FurnitureWidgetLabel]</label><onclick>ActivateWindow(1113)</onclick><visible>!Control.IsVisible(52) + !Control.IsVisible(54) + !Control.IsVisible(515) + !Control.IsVisible(53) + !Control.IsVisible(500)</visible></control>-->
		<control type="button" id="9005">
			<description>widget</description>
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>$LOCALIZE[31946]:   $INFO[Skin.String(border.image)]</label>
			<onclick>ActivateWindow(1114)</onclick>
		</control>
		<control type="radiobutton" id="9006" description="Plot List (50)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(artists.50list.showplot)</selected>
			<onclick>Skin.ToggleSetting(artists.50list.showplot)</onclick>
			<visible>Control.IsVisible(50) + Container.Content(artists)</visible>
		</control>
		<control type="radiobutton" id="9007" description="Plot List (50)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(albums.50list.showplot)</selected>
			<onclick>Skin.ToggleSetting(albums.50list.showplot)</onclick>
			<visible>Control.IsVisible(50) + Container.Content(albums)</visible>
		</control>
		<control type="radiobutton" id="9008" description="Plot List (50)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(songs.50list.showplot)</selected>
			<onclick>Skin.ToggleSetting(songs.50list.showplot)</onclick>
			<visible>Control.IsVisible(50) + Container.Content(songs)</visible>
		</control>
		<control type="radiobutton" id="9009" description="Plot List (50)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(general.50list.showplot)</selected>
			<onclick>Skin.ToggleSetting(general.50list.showplot)</onclick>
			<visible>Control.IsVisible(50) + !Container.Content(songs) + !Container.Content(albums) + !Container.Content(artists) + !Container.Content(episodes) + !Container.Content(seasons) + !Container.Content(tvshows) + !Container.Content(movies)</visible>
		</control>
		<control type="radiobutton" id="9016" description="Plot List (57)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(artists.57list.showplot)</selected>
			<onclick>Skin.ToggleSetting(artists.57list.showplot)</onclick>
			<visible>Control.IsVisible(57) + Container.Content(artists)</visible>
		</control>
		<control type="radiobutton" id="9017" description="Plot List (57)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(albums.57list.showplot)</selected>
			<onclick>Skin.ToggleSetting(albums.57list.showplot)</onclick>
			<visible>Control.IsVisible(57) + Container.Content(albums)</visible>
		</control>
		<control type="radiobutton" id="9018" description="Plot List (57)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(songs.57list.showplot)</selected>
			<onclick>Skin.ToggleSetting(songs.57list.showplot)</onclick>
			<visible>Control.IsVisible(57) + Container.Content(songs)</visible>
		</control>
		<control type="radiobutton" id="9019" description="Plot List (57)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31214</label>
			<selected>Skin.HasSetting(general.57list.showplot)</selected>
			<onclick>Skin.ToggleSetting(general.57list.showplot)</onclick>
			<visible>Control.IsVisible(57) + !Container.Content(songs) + !Container.Content(albums) + !Container.Content(artists) + !Container.Content(episodes) + !Container.Content(seasons) + !Container.Content(tvshows) + !Container.Content(movies)</visible>
		</control>
		<control type="radiobutton" id="9031" description="Banner show poster (54)">
			<include>DefContextButtonBlade</include>
			<align>left</align>
			<label>31147</label>
			<selected>Skin.HasSetting(54banner.showinfo)</selected>
			<onclick>Skin.ToggleSetting(54banner.showinfo)</onclick>
			<visible>Control.IsVisible(54) + !Container.Content(seasons)</visible>
		</control>
		<control type="button" id="9098">
			<description>Now Playing</description>
			<include>DefContextButtonBlade</include>
			<label>13350</label>
			<align>left</align>
			<onclick>ActivateWindow(MusicPlaylist)</onclick>
			<visible>IntegerGreaterThan(Playlist.Length(music),1)</visible>
		</control>
	</include>
	<variable name="DefDirectorWindowContent">
		<value condition="stringcompare(Window(1103).Property(content),1)">plugin://script.extendedinfo?info=studio&amp;&amp;studio=$INFO[Window(home).Property(ExtStudio)]</value>
		<value condition="stringcompare(Window(1103).Property(content),2)">plugin://script.extendedinfo?info=similarmovies&amp;&amp;dbid=$INFO[Window(home).Property(ExtDBID)]</value>
		<value>plugin://script.extendedinfo?info=directormovies&amp;&amp;director=$INFO[Window(home).Property(ExtDirector)]</value>
	</variable>
	<variable name="DefMovieDBMoviesContent">
		<value condition="stringcompare(Window(1104).Property(content),1)">plugin://script.extendedinfo?info=topratedmovies</value>
		<value condition="stringcompare(Window(1104).Property(content),2)">plugin://script.extendedinfo?info=popularmovies</value>
		<value condition="stringcompare(Window(1104).Property(content),3)">plugin://script.extendedinfo?info=upcoming</value>
		<value>plugin://script.extendedinfo?info=incinemas</value>
	</variable>
	<variable name="DefMovieDBEpisodesContent">
		<value condition="stringcompare(Window(1105).Property(content),1)">plugin://script.extendedinfo?info=topratedtvshows</value>
		<value condition="stringcompare(Window(1105).Property(content),2)">plugin://script.extendedinfo?info=populartvshows</value>
		<value condition="stringcompare(Window(1105).Property(content),3)">plugin://script.extendedinfo?info=onairtvshows</value>
		<value>plugin://script.extendedinfo?info=airingtodaytvshows</value>
	</variable>
	<include name="DefInfoButtons">
		<font>Button</font>
		<textcolor>Dark2</textcolor>
		<width>313</width>
		<height>68</height>
		<onfocus>ClearProperty(content)</onfocus>
		<texturenofocus colordiffuse="Dark4">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</texturefocus>
		<alttexturenofocus colordiffuse="Dark4">common/box.png</alttexturenofocus>
		<alttexturefocus colordiffuse="$VAR[ColourHighlight]">common/box.png</alttexturefocus>
	</include>
	<include name="YoutubeItemLayout">
		<control type="group">
			<control type="image">
				<posx>15</posx>
				<width>445</width>
				<height>240</height>
				<texture>common/nofocus-shadow10.png</texture>
			</control>
			<control type="image">
				<posx>25</posx>
				<width>425</width>
				<height>220</height>
				<fadetime>200</fadetime>
				<aspectratio aligny="center">scale</aspectratio>
				<texture diffuse="diffuse/wall.png" background="true">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<posx>35</posx>
				<posy>215</posy>
				<width>475</width>
				<label>$INFO[ListItem.Label2]</label>
				<font>Small</font>
				<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			</control>
			<control type="image">
				<posx>315</posx>
				<posy>218</posy>
				<width>130</width>
				<height>30</height>
				<texture colordiffuse="Dark1">$INFO[ListItem.Rating,stars/,.png]</texture>
			</control>
			<control type="textbox">
				<posx>20</posx>
				<posy>242</posy>
				<height>104</height>
				<width>455</width>
				<label>$INFO[ListItem.Label]</label>
				<align>center</align>
				<font>Small</font>
				<textcolor>Dark2</textcolor>
			</control>
			<control type="label">
				<posx>30</posx>
				<posy>-15</posy>
				<width>415</width>
				<height>5</height>
				<align>center</align>
				<label>$INFO[ListItem.Date]</label>
				<font>Tiny</font>
				<textcolor>Dark3</textcolor>
			</control>
		</control>
	</include>
	<include name="YoutubeFocusedLayout">
		<control type="group">
			<animation type="Focus">
				<effect type="zoom" time="150" start="95" end="100" center="245,260" />
				<effect type="zoom" time="150" start="105" end="100" delay="150" center="245,260" />
			</animation>
			<control type="image">
				<posx>15</posx>
				<width>445</width>
				<height>240</height>
				<texture>common/nofocus-shadow10.png</texture>
			</control>
			<control type="image">
				<posx>25</posx>
				<width>425</width>
				<height>220</height>
				<aspectratio aligny="center">scale</aspectratio>
				<texture diffuse="diffuse/wall.png" background="true">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<posx>35</posx>
				<posy>215</posy>
				<width>475</width>
				<label>$INFO[ListItem.Label2]</label>
				<font>Small</font>
				<textcolor>$VAR[ColourSelected]</textcolor>
			</control>
			<control type="image">
				<posx>315</posx>
				<posy>218</posy>
				<width>130</width>
				<height>30</height>
				<texture colordiffuse="$VAR[ColourHighlight]">$INFO[ListItem.Rating,stars/,.png]</texture>
			</control>
			<control type="textbox">
				<posx>20</posx>
				<posy>242</posy>
				<height>104</height>
				<width>455</width>
				<align>center</align>
				<label>$INFO[ListItem.Label]</label>
				<animation effect="fade" time="300" start="70" end="100" delay="100" reversible="false">Focus</animation>
				<animation effect="fade" time="300" start="100" end="50" reversible="false">UnFocus</animation>
				<font>Small</font>
				<textcolor>$VAR[ColourSelected]</textcolor>
			</control>
			<control type="label">
				<posx>30</posx>
				<posy>-15</posy>
				<width>455</width>
				<height>5</height>
				<align>center</align>
				<label>$INFO[ListItem.Date]</label>
				<font>Tiny</font>
				<textcolor>$VAR[ColourSelected]</textcolor>
			</control>
		</control>
	</include>
	<include name="TopDefExtendedInfoList">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<ondown condition="Control.IsVisible(150)">150</ondown>
		<ondown condition="Control.IsVisible(750)">750</ondown>
		<ondown condition="Control.IsVisible(250)">250</ondown>
		<ondown condition="Control.IsVisible(2000)">2000</ondown>
		<ondown condition="Control.IsVisible(350)">350</ondown>
		<ondown condition="Control.IsVisible(850)">850</ondown>
		<ondown condition="Control.IsVisible(950)">950</ondown>
		<ondown condition="Control.IsVisible(1150)">1150</ondown>
		<ondown condition="Control.IsVisible(1250)">1250</ondown>
		<ondown condition="Control.IsVisible(1350)">1350</ondown>
		<onup>9000</onup>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="140">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="140">
			<include>DefExtendedInfoFocusContentCast</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListCrew">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="140">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="140">
			<include>DefExtendedInfoFocusContentCrew</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListSimilar">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="140">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="140">
			<include>DefExtendedInfoFocusContentSimilar</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListSets">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="140">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="140">
			<include>DefExtendedInfoFocusContentSets</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListImages">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="140">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="140">
			<include>DefExtendedInfoFocusContentImages</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoList150">
		<top>55</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="207">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="207">
			<include>DefExtendedInfoFocusContent150</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoList250">
		<top>55</top>
		<width>1920</width>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="207">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="207">
			<include>DefExtendedInfoFocusContent250</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoList450">
		<top>55</top>
		<width>1920</width>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="207">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="207">
			<include>DefExtendedInfoFocusContent450</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoList550">
		<top>55</top>
		<width>1920</width>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="207">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="207">
			<include>DefExtendedInfoFocusContent550</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoList650">
		<top>55</top>
		<width>1920</width>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="207">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="207">
			<include>DefExtendedInfoFocusContent650</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideYoutube">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentYoutube</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideVideos">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentVideos</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideFanart">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentFanart</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWide">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContent</include>
		</focusedlayout>
	</include>
	<include name="BigDefExtendedInfoListWide">
		<top>55</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="310" width="552">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="310" width="552">
			<include>DefExtendedInfoFocusContent350</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideEpisode">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContent</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentEpisode</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideGenre">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContentGenre</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentGenre</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoListWideWord">
		<top>40</top>
		<width>1920</width>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<pagecontrol>60</pagecontrol>
		<viewtype label="536">list</viewtype>
		<scrolltime tween="quadratic">400</scrolltime>
		<include>Animation.FadeIn.Slide</include>
		<ondown>9000</ondown>
		<onup>94988</onup>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic">400</scrolltime>
		<itemlayout height="210" width="373">
			<include>DefExtendedInfoItemContentWord</include>
		</itemlayout>
		<focusedlayout height="210" width="373">
			<include>DefExtendedInfoFocusContentWord</include>
		</focusedlayout>
	</include>
	<include name="DefExtendedInfoItemContent">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">stretch</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(ImageColor)]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
		</control>
	</include>
	<include name="DefExtendedInfoFocusContentCast">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(1000)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(1000)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(1000)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentCrew">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(750)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(750)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(750)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentSets">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(250)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(250)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(250)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentImages">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(1250)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(1250)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(1250)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentSimilar">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(150)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(150)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(150)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentVideos">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(1150)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(1150)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(1150)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentYoutube">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(350)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(350)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(350)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentFanart">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(1350)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(1350)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(1350)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent150">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(150)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(150)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(150)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent250">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(250)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(250)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(250)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent350">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(350)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(350)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(350)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent450">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(450)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(450)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(450)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent550">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(550)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(550)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(550)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent650">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(650)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(650)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(650)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContent">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Rating]$INFO[ListItem.Votes,[CR](, $LOCALIZE[20350])]</label>
		</control>
		<control type="label">
			<centerleft>50%</centerleft>
			<top>50</top>
			<width>112</width>
			<height>112</height>
			<label></label>
			<textcolor>$INFO[Window(home).Property(ImageColor)]</textcolor>
			<focusedcolor>$INFO[Window(home).Property(ImageColor)]</focusedcolor>
			<font>symbolbiggest</font>
			<aligny>center</aligny>
			<align>center</align>
			<animation type="Focus">
				<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
			</animation>
			<animation type="Unfocus">
				<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
				<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
			</animation>
			<visible>!substring(ListItem.Path,script.extendedinfo) + !Control.IsVisible(1250) + !Control.IsVisible(1350) + !Control.IsVisible(250) + !Control.IsVisible(450)</visible>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoFocusContentEpisode">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>
			<height>210</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbiggest</font>
			<label></label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<fadetime>300</fadetime>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<visible>!Control.HasFocus(2000)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">scale</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(2000)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(2000)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Episode,[B],[/B]]$INFO[ListItem.Label,[B]:[/B] ]$INFO[ListItem.Property(release_date),[CR][COLOR white3],[/COLOR]]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoItemContentGenre">
		<control type="image">
			<aspectratio scalediffuse="false">keep</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(ImageColor)]" background="true" fallback="DefaultPicture.png">$VAR[MovieGenres]</texture>
		</control>
	</include>
	<include name="DefExtendedInfoFocusContentGenre">
		<control type="image">
			<aspectratio scalediffuse="false">keep</aspectratio>
			<texture background="true" fallback="DefaultPicture.png">$VAR[MovieGenres]</texture>
			<visible>!Control.HasFocus(850)</visible>
		</control>
		<control type="image">
			<aspectratio scalediffuse="false">keep</aspectratio>
			<texture colordiffuse="$VAR[ColourHighlight]" background="true" fallback="DefaultPicture.png">$VAR[MovieGenres]</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(850)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(850)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>Small</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="DefExtendedInfoItemContentWord">
		<control type="image">
			<texture colordiffuse="$INFO[Window(home).Property(ImageColor)]">common/box.png</texture>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>LargeHeaderFont</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<selectedcolor>$VAR[EmbyMenuTextColourHighlight]</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
		</control>
	</include>
	<include name="DefExtendedInfoFocusContentWord">
		<control type="image">
			<texture colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texture>
			<visible>!Control.HasFocus(950)</visible>
		</control>
		<control type="image">
			<texture colordiffuse="$VAR[ColourHighlight]">common/box.png</texture>
			<animation type="Conditional" reversible="true" condition="Control.HasFocus(950)">
				<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
			<visible>Control.HasFocus(950)</visible>
		</control>
		<control type="textbox">
			<left>5</left>
			<right>5</right>
			<top>30</top>
			<bottom>30</bottom>
			<align>center</align>
			<aligny>center</aligny>
			<font>LargeHeaderFont</font>
			<textcolor>$VAR[ColourSelected]</textcolor>
			<selectedcolor>$VAR[ColourSelected]</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
		</control>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="100" end="110" time="200" center="auto" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="EuniqueLogoHorizontal">
		<param name="left" default="50"/>
		<param name="left2" default="100"/>
		<param name="left3" default="150"/>
		<param name="left4" default="200"/>
		<param name="left5" default="250"/>
		<param name="left6" default="300"/>
		<param name="left7" default="350"/>
		<param name="top" default="25"/>
		<param name="top2" default="35"/>
		<param name="width" default="50"/>
		<param name="height" default="50"/>
		<param name="font" default="LargeBoldReg"/>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[EmbyLeftColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>E</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<angle>45</angle>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left2]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[ColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>u</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left3]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>n</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left4]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[ColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>i</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
			<control type="group">
				<top>$PARAM[top2]</top>
				<left>$PARAM[left5]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[EmbyLeftColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<top>-3</top>
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>q</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
				<animation type="Conditional" reversible="true" condition="!Window.IsVisible(Startup.xml)" loop="true">
					<effect type="slide" end="0,-25" tween="sine" delay="3000" easing="out" time="1000" />
					<effect type="slide" start="0,0" end="0,25" delay="4100" tween="bounce" easing="out" time="500" />
				</animation>
			</control>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left6]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[ColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>u</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left7]</left>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[EmbyRightColourHighlight]">common/box.png</texture>
				</control>
				<control type="label">
					<description>Loading</description>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>e</label>
					<font>$PARAM[font]</font>
					<textcolor>black</textcolor>
					<animation effect="fade" start="100" end="0" time="500" tween="quadratic">WindowClose</animation>
				</control>
			</control>
		</definition>
	</include>
	<include name="WidgetLoading">
		<param name="left" default="-50"/>
		<param name="top" default="-50"/>
		<param name="width" default="50"/>
		<param name="height" default="50"/>
		<param name="font" default="symbolbig"/>
		<param name="fontsize" default="58"/>
		<param name="symbol" default=""/>
		<param name="textcolor" default="$VAR[EmbyMenuColourHighlight]"/>
		<param name="id" default="-"/>
		<param name="imagepath" default="$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]"/>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<left>$PARAM[left]</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<control type="multiimage">
					<timeperimage>100</timeperimage>
					<randomize>true</randomize>
					<fadetime>100</fadetime>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<imagepath background="true">$PARAM[imagepath]</imagepath>
					<animation effect="fade" start="30" end="30" time="0" condition="true">Conditional</animation>
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<visible>!ControlGroup($PARAM[id]).HasFocus</visible>
				</control>
				<control type="group">
					<top>0</top>
					<right>0</right>
					<width>$PARAM[fontsize]</width>
					<height>$PARAM[fontsize]</height>
					<control type="label">
						<description>Loading symbol</description>
						<label>$PARAM[symbol]</label>
						<align>center</align>
						<aligny>center</aligny>
						<font>$PARAM[font]</font>
						<textcolor>$PARAM[textcolor]</textcolor>
						<animation effect="rotate" start="00" end="-360" center="auto" delay="0" time="1500" loop="true" condition="true">Conditional</animation>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<!-- 5th/6th param widget -->
	
	<include name="WidgetLandscapeItemLayout">
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$VAR[LandscapeImage]</texture>
		</control>
			<control type="progress">
				<bottom>0</bottom>
				<height>8</height>
				<info>ListItem.PercentPlayed</info>
				<overlaytexture>-</overlaytexture>
				<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
				<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
				<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
				<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
				<visible>ListItem.IsResumable</visible>
			</control>
	</include>
	<include name="WidgetLandscapeFocusedItemLayout">
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$VAR[LandscapeImage]</texture>
		</control>
			<control type="progress">
				<bottom>0</bottom>
				<height>8</height>
				<info>ListItem.PercentPlayed</info>
				<overlaytexture>-</overlaytexture>
				<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
				<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
				<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
				<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
				<visible>ListItem.IsResumable</visible>
			</control>
	</include>
	<include name="WidgetLandscapeFocusedItemLayoutLiveTV">
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$VAR[LandscapeImage]</texture>
			<animation type="Focus" reversible="false">
				<effect type="zoom" start="105" end="90" time="200" center="auto" tween="quadratic" easing="out"/>
			</animation>
		</control>
	</include>
	<include name="WidgetPosterItemLayout">
		<control type="image">
			<aspectratio>stretch</aspectratio>
			<texture background="true">$VAR[PosterImage]</texture>
		</control>
		<control type="progress">
			<bottom>0</bottom>
			<height>8</height>
			<info>ListItem.PercentPlayed</info>
			<overlaytexture>-</overlaytexture>
			<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
			<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
			<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
			<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
			<visible>ListItem.IsResumable</visible>
		</control>
	</include>
	<include name="WidgetPosterFocusedItemLayout">
		<control type="group">
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<texture background="true">$VAR[PosterImage]</texture>
			</control>
			<control type="progress">
				<bottom>0</bottom>
				<height>8</height>
				<info>ListItem.PercentPlayed</info>
				<overlaytexture>-</overlaytexture>
				<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
				<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
				<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
				<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
				<visible>ListItem.IsResumable</visible>
			</control>
		</control>
	</include>
	<include name="WidgetSquareItemLayout">
		<control type="image">
			<aspectratio>stretch</aspectratio>
			<texture background="true">$VAR[PosterImage]</texture>
		</control>
	</include>
	<include name="WidgetSquareFocusedItemLayout">
		<control type="group">
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<texture background="true">$VAR[PosterImage]</texture>
			</control>
		</control>
	</include>
	<include name="WidgetBannerItemLayout">
		<control type="image">
			<aspectratio>stretch</aspectratio>
			<texture background="true">$VAR[BannerImage]</texture>
		</control>
		<control type="progress">
			<bottom>0</bottom>
			<height>8</height>
			<info>ListItem.PercentPlayed</info>
			<overlaytexture>-</overlaytexture>
			<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
			<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
			<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
			<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
			<visible>ListItem.IsResumable</visible>
		</control>
	</include>
	<include name="WidgetBannerFocusedItemLayout">
		<control type="group">
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<texture background="true">$VAR[BannerImage]</texture>
			</control>
			<control type="progress">
				<bottom>0</bottom>
				<height>8</height>
				<info>ListItem.PercentPlayed</info>
				<overlaytexture>-</overlaytexture>
				<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
				<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
				<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
				<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
				<visible>ListItem.IsResumable</visible>
			</control>
		</control>
	</include>
	<variable name="DefWidget_1_Content">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies1)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetPath.movies1)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows1)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetPath.tvshows1)]</value>

		<value condition="!IsEmpty(Skin.String(music1widget.path)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music1widget.path)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetPath)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">plugin://script.skin.helper.service/?action=recentalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value>plugin://service.library.data.provider?type=recentmovies&amp;reload=$INFO[Window.Property(recentmovies)]</value>
	</variable>

	<variable name="DefWidget_2_Content">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies2)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetPath.movies2)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows2)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetPath.tvshows2)]</value>

		<value condition="!IsEmpty(Skin.String(music2widget.path)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music2widget.path)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.1)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetPath.1)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">plugin://script.skin.helper.service/?action=recentplayedalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value>plugin://script.extendedinfo?info=trendingshows</value>
	</variable>

	<variable name="DefWidget_3_Content">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies3)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetPath.movies3)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows3)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetPath.tvshows3)]</value>

		<value condition="!IsEmpty(Skin.String(music3widget.path)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music3widget.path)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.2)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetPath.2)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">plugin://script.skin.helper.service/?action=recommendedalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value>plugin://script.extendedinfo?info=popularmovies</value>
	</variable>

	<variable name="DefWidget_4_Content">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.movies4)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetPath.movies4)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.tvshows4)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetPath.tvshows4)]</value>

		<value condition="!IsEmpty(Skin.String(music4widget.path)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music4widget.path)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetPath.3)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetPath.3)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">plugin://script.skin.helper.service/?action=recentalbums&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value>plugin://script.skin.helper.service/?action=similarmovies&amp;limit=12&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>

<!-- 2,1,3,15 [defs] -->



	<variable name="DefWidget_1_Target">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies1)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetTarget.movies1)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows1)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows1)]</value>

		<value condition="!IsEmpty(Skin.String(music1widget.target)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music1widget.target)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetTarget)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">music</value>
		<value>video</value>
	</variable>

	<variable name="DefWidget_2_Target">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies2)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetTarget.movies2)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows2)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows2)]</value>

		<value condition="!IsEmpty(Skin.String(music2widget.target)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music2widget.target)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.1)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetTarget.1)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">music</value>
		<value>video</value>
	</variable>

	<variable name="DefWidget_3_Target">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies3)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetTarget.movies3)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows3)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows3)]</value>

		<value condition="!IsEmpty(Skin.String(music3widget.target)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music3widget.target)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.2)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetTarget.2)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">music</value>
		<value>video</value>
	</variable>

	<variable name="DefWidget_4_Target">

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.movies4)) + StringCompare(Container(300).ListItem.Property(defaultID),movies)">$INFO[Container(300).ListItem.Property(widgetTarget.movies4)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.tvshows4)) + StringCompare(Container(300).ListItem.Property(defaultID),tvshows)">$INFO[Container(300).ListItem.Property(widgetTarget.tvshows4)]</value>

		<value condition="!IsEmpty(Skin.String(music4widget.target)) + StringCompare(Container(300).ListItem.Property(defaultID),music)">$INFO[Skin.String(music4widget.target)]</value>

		<value condition="!IsEmpty(Container(300).ListItem.Property(widgetTarget.3)) + !StringCompare(Container(300).ListItem.Property(defaultID),movies) + !StringCompare(Container(300).ListItem.Property(defaultID),tvshows) + !StringCompare(Container(300).ListItem.Property(defaultID),music) + !StringCompare(Container(300).ListItem.Property(defaultID),Weather) + !StringCompare(Container(300).ListItem.Property(defaultID),livetv)">$INFO[Container(300).ListItem.Property(widgetTarget.3)]</value>

		<value condition="StringCompare(Container(300).ListItem.Property(defaultID),music)">music</value>
		<value>video</value>
	</variable>



	<include name="TVGuideWeekdayButton">
		<posx>0</posx>
		<posy>0</posy>
		<width>271.4285714285714</width>
		<height>51</height>
		<textoffsetx>0</textoffsetx>
		<align>left</align>
		<texturefocus>-</texturefocus>
		<texturenofocus>-</texturenofocus>
		<font>DurationFontSmall</font>
		<textcolor>$VAR[ColourTextFlags]</textcolor>
	</include>

	<include name="TVGuideWeekdayButton2">
		<posx>0</posx>
		<posy>0</posy>
		<width>116.75</width>
		<height>51</height>
		<textoffsetx>0</textoffsetx>
		<align>left</align>
		<texturefocus>-</texturefocus>
		<texturenofocus>-</texturenofocus>
		<font>DurationFontMini</font>
		<textcolor>$VAR[ColourTextFlags]</textcolor>
	</include>
	
</includes>
