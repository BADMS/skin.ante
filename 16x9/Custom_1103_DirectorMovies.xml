<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window type="window" id="1103">
	<defaultcontrol always="true">9500</defaultcontrol>
	<allowoverlay>false</allowoverlay>
	<onunload>ClearProperty(content)</onunload>
	<controls>
		<include condition="!Skin.HasSetting(lights.out)">GlobalBackground</include>
		<include>Furniture_NowPlaying</include>
		<include>Furniture_HeaderEmby</include>
		<include>Furniture_EmbyClock</include>
		<control type="group">
			<posy>40</posy>
			<include condition="!Skin.HasSetting(low.power)">Animation.Common</include><include condition="Skin.HasSetting(low.power)">Animation.Common.Lowpower</include>
			<control type="grouplist" id="9510">
				<top>206</top>
				<height>100</height>
				<ondown>9500</ondown>
				<orientation>horizontal</orientation>
				<align>center</align>
				<left>SidePad</left>
				<right>SidePad</right>
				<control type="button" id="9511">
					<font>Medium</font>
					<height>100</height>
					<width>200</width>
					<textcolor>Dark3</textcolor>
					<focusedcolor>$VAR[EmbyMenuTextColourHighlight]</focusedcolor>
					<label>20339</label>
					<onclick>SetProperty(content,3)</onclick>
					<onclick>SetFocus(9500,0)</onclick>
					<texturefocus>noop</texturefocus>
				</control>
				<control type="button" id="9512">
					<font>Medium</font>
					<height>100</height>
					<width>200</width>
					<textcolor>Dark3</textcolor>
					<focusedcolor>$VAR[EmbyMenuTextColourHighlight]</focusedcolor>
					<label>31206</label>
					<onclick>SetProperty(content,2)</onclick>
					<onclick>SetFocus(9500,0)</onclick>
					<texturefocus>noop</texturefocus>
				</control>
				<control type="button" id="9513">
					<font>Medium</font>
					<height>100</height>
					<width>200</width>
					<textcolor>Dark3</textcolor>
					<focusedcolor>$VAR[EmbyMenuTextColourHighlight]</focusedcolor>
					<label>572</label>
					<onclick>SetProperty(content,1)</onclick>
					<onclick>SetFocus(9500,0)</onclick>
					<texturefocus>noop</texturefocus>
				</control>
			</control>
			<control type="group">
				<centerleft>50%</centerleft>
				<centertop>49%</centertop>
				<width>450</width>
				<height>117</height>
				<visible>Container(9500).IsUpdating</visible>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<control type="multiimage">
					<description>Busy animation</description>
					<posx>30</posx>
					<posy>30</posy>
					<width>48</width>
					<height>48</height>
					<aspectratio>keep</aspectratio>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
					<colordiffuse>$VAR[ColourHighlight]</colordiffuse>
					<fadetime>0</fadetime>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
				</control>
				<control type="label">
					<description>Busy label</description>
					<posx>105</posx>
					<posy>30</posy>
					<width>720</width>
					<height>48</height>
					<align>left</align>
					<label>$LOCALIZE[31138]...</label>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
				</control>
			</control>
			<control type="list" id="9500">
				<visible allowhiddenfocus="true">!Container(9500).IsUpdating</visible>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<top>330</top>
				<right>72</right>
				<left>72</left>
				<height>674</height>
				<onup>9510</onup>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<pagecontrol>60</pagecontrol>
				<viewtype label="536">list</viewtype>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="337" width="222">
					<control type="image">
						<left>10</left>
						<top>10</top>
						<right>10</right>
						<bottom>22</bottom>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture diffuse="diffuse/wall.png" background="true">$VAR[PosterImage]</texture>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>
				</itemlayout>
				<focusedlayout height="337" width="222">
					<control type="image">
						<left>10</left>
						<top>10</top>
						<right>10</right>
						<bottom>22</bottom>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture diffuse="diffuse/wall.png" background="true">$VAR[PosterImage]</texture>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>
					<control type="image">
						<centerleft>50%</centerleft>
						<centertop>162</centertop>
						<width>128</width>
						<height>128</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="88ffffff">common/playring.png</texture>
						<animation type="Focus">
							<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
						</animation>
						<animation type="Unfocus">
							<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
						</animation>
						<visible>!substring(ListItem.Path,script.extendedinfo)</visible>
					</control>
					<control type="image">
						<left>3</left>
						<top>3</top>
						<right>3</right>
						<bottom>15</bottom>
						<texture colordiffuse="$VAR[ColourHighlight]">common/box.png</texture>
						<animation type="Focus">
							<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
						</animation>
						<animation type="Unfocus">
							<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
						</animation>
					</control>
				</focusedlayout>
				<content>$VAR[DefDirectorWindowContent]</content>
			</control>
			<control type="grouplist">
				<visible>!Container(9500).IsUpdating</visible>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<left>SidePad</left>
				<right>SidePad</right>
				<orientation>vertical</orientation>
				<top>695</top>
				<itemgap>-10</itemgap>
				<control type="label">
					<font>MediumBold</font>
					<width>100%</width>
					<align>center</align>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<label>$INFO[Container(9500).ListItem.Label]</label>
				</control>
				<control type="label">
					<font>Small</font>
					<width>100%</width>
					<align>center</align>
					<textcolor>Dark2</textcolor>
					<label>$INFO[Container(9500).ListItem.Year]$INFO[Container(9500).ListItem.Rating,  •  ,]$INFO[Container(9500).ListItem.Votes, (, $LOCALIZE[20350])]</label>
				</control>
			</control>
		</control>
	</controls>
</window>